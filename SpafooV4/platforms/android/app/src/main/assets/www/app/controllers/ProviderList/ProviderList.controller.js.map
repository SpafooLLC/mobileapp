{"version":3,"sources":["controllers/ProviderList/ProviderList.controller.ts"],"names":[],"mappings":"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","file":"controllers/ProviderList/ProviderList.controller.js","sourcesContent":["module ProviderListController {\r\n\r\n    class ProviderListController {\r\n        ServiceData: any;\r\n        pdata: number = 0;\r\n        PreviousID: string;\r\n        ServiceIDs: any;\r\n        proindex: number;\r\n        NoDatafound: string;\r\n        InMile: any;\r\n        profilePic: string;\r\n        options: any;\r\n        ProviderIDlst: any = '';\r\n        static currentlatlong: any;\r\n        static $inject = ['$q', '$state', '$ionicPopup', '$ionicLoading', '$scope', '$location', 'CustomerHttp', '$window', 'toaster', 'SharedHttp'];\r\n        constructor(\r\n            private $q: ng.IQService,\r\n            private $state: angular.ui.IStateService,\r\n            private $ionicPopup: ionic.popup.IonicPopupService,\r\n            private $ionicLoading: ionic.loading.IonicLoadingService,\r\n            private $scope: ng.IScope,\r\n            private $location: ng.ILocationService,\r\n            private CustomerHttp: spafoo.httpservice.ICustomerScreenHttp,\r\n            private $window: ng.IWindowService,\r\n            private toaster: ngtoaster.IToasterService,\r\n            private SharedHttp: spafoo.httpsharedservice.ISharedHttp) {\r\n            var self = this;\r\n            self.ServiceIDs = self.$window.localStorage.getItem('ServiceIDs');\r\n            // alert(this.ServiceIDs);\r\n            //  self.SharedHttp.IsGPSOn();\r\n\r\n\r\n            //cordova.plugins.locationAccuracy.canRequest(function (canRequest: any) {\r\n            //    if (canRequest) {\r\n            //        cordova.plugins.locationAccuracy.request(function (success: any) {\r\n            //          //  alert(\"Successfully requested accuracy: \" + JSON.stringify( success));\r\n            //            //setTimeout(function () {\r\n            //            // //   navigator.geolocation.getCurrentPosition(self.onSuccess, self.onError, options);\r\n            //            //  //  self.getProviderList(self.ServiceIDs);\r\n\r\n            //            //    $state.go('ProviderList');\r\n            //            //}, 5000);\r\n\r\n            //        }, function (error: any) {\r\n            //            //   alert(\"Accuracy request failed: error code=\" + error.code + \"; error message=\" + error.message);\r\n            //            if (error.code !== cordova.plugins.locationAccuracy.ERROR_USER_DISAGREED) {\r\n            //                if (window.confirm(\"Failed to automatically set Location Mode to 'High Accuracy'. Would you like to switch to the Location Settings page and do this manually?\")) {\r\n            //                    cordova.plugins.diagnostic.switchToLocationSettings();\r\n            //                }\r\n            //            }\r\n            //        }, cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY);\r\n            //    }\r\n            //});\r\n\r\n            self.proindex = 0;\r\n\r\n            self.options = {\r\n                enableHighAccuracy: true,\r\n                maximumAge: 3600000\r\n            };\r\n            // navigator.geolocation.getCurrentPosition(self.onSuccess, self.onError, self.options);\r\n            self.getProviderList(self.ServiceIDs);\r\n\r\n        }\r\n\r\n        GetWithInMile() {\r\n            var self = this;\r\n            self.CustomerHttp.get('/GetWithInMile').then(function (response: any) {\r\n                self.InMile = parseInt(response.GetWithInMileResult);\r\n            });\r\n\r\n        }\r\n        getProviderList(ServiceID: any) {\r\n            debugger;\r\n            var self = this;\r\n            //document.addEventListener(\"deviceready\", function () {\r\n             \r\n                //   CheckGPS.check(function () {\r\n                $(\"#showload\").show();            \r\n                self.CustomerHttp.get('/GetWithInMile').then(function (response: any) {\r\n                    debugger;\r\n                   self.InMile = parseInt(response.GetWithInMileResult);\r\n                    // self.InMile  = 1000000;\r\n                    navigator.geolocation.getCurrentPosition(self.onSuccess, self.onError, self.options);\r\n                      setTimeout(function () {\r\n                    self.CustomerHttp.post({ ServiceID: self.ServiceIDs }, '/ListProvidersByServices_p').then(function (response: any) {\r\n                        console.log(\"reponse list provider by serive\", response);\r\n                        self.ServiceData = response;\r\n                        debugger;\r\n                        for (var i = 0; i < response.length; i++) {\r\n                            debugger;\r\n                            self.GetDistanceBetween(self.ServiceData[i].userInfoField.vanityUrlField, i);\r\n                            var sid = parseInt(self.ServiceIDs);\r\n                            var pricedata = self.ServiceData[i].servicesField.filter((z: any) => z.serviceIDField == sid)[0];\r\n                           // self.ServiceData[i].minimumField = pricedata.minimumField;\r\n                           // self.ServiceData[i].rangeToField = pricedata.rangeToField;\r\n\r\n                            if (parseInt(self.ServiceData[i].userInfoField.distance) <= parseInt(self.InMile))\r\n                             {\r\n                                self.ServiceData[i].userInfoField.displayNameField = self.ServiceData[i].userInfoField.firstNameField + \" \" + self.ServiceData[i].userInfoField.lastNameField[0] + \".\";\r\n\r\n                                if (self.ServiceData[i].userInfoField.profileField.photoField != null) {\r\n                                    self.getProfilePics(self.ServiceData[i].userInfoField.profileField.photoField, i);\r\n                                    self.GetProTagLine(self.ServiceData[i].userInfoField.userIDField, i);\r\n                                    self.GetMyRating(self.ServiceData[i].userInfoField.userIDField, i);\r\n                                }\r\n                                else { self.ServiceData[i].userInfoField.profileField.photoField = \"\"; };\r\n\r\n                                self.proindex++;\r\n                                self.ProviderIDlst += self.ServiceData[i].userInfoField.userIDField + \"|\";\r\n                            }\r\n                            if (self.proindex == 0 && parseInt(self.ServiceData[i].userInfoField.distance) >= parseInt(self.InMile)) {\r\n                                self.NoDatafound = \"Sorry, no provider found for the selected service \";\r\n                            }\r\n                        }\r\n                    }, function (error) {\r\n                        if (error === null) {\r\n                            self.$ionicLoading.hide();\r\n                        } else {\r\n                            console.log(error);\r\n                            self.$ionicLoading.hide();\r\n                        }\r\n                    });\r\n                        }, 3000);\r\n\r\n                });\r\n                // },\r\n                //     function () {\r\n                //         self.SharedHttp.IsGPSOn();\r\n                //     });\r\n\r\n           // });\r\n        }\r\n        GetDistanceBetween(latlong: any, index: any) {\r\n            var lat1 = latlong.substring(0, latlong.indexOf(':'));\r\n            var long1 = latlong.substring(latlong.indexOf(':') + 1);\r\n            var self = this;\r\n            //   alert(JSON.stringify(ProviderListController.currentlatlong) + \" ::: Lat1 --> \" + lat1 + \" Long ::: \" + long1);\r\n            var lat2 = ProviderListController.currentlatlong.coords.latitude;\r\n            var long2 = ProviderListController.currentlatlong.coords.longitude;\r\n            var R = 6378137; // Earth’s mean radius in meter\r\n            var dLat = self.rad(lat2 - lat1);\r\n            var dLong = self.rad(long2 - long1);\r\n            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n                Math.cos(self.rad(lat1)) * Math.cos(self.rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\r\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n            var d = R * c;\r\n            self.ServiceData[index].userInfoField.distance = (d / 1609.344).toFixed(1);\r\n\r\n            // returns the distance in meter\r\n\r\n        }\r\n        onSuccess(position: any) {\r\n            //  alert(JSON.stringify(position.coords.latitude + \", \" + position.coords.longitude));\r\n\r\n            ProviderListController.currentlatlong = position;\r\n            //  alert( \"static Variable :: \"+ JSON.stringify(ProviderListController.currentlatlong.coords.latitude + \", \" + ProviderListController.currentlatlong.coords.longitude))\r\n        }\r\n        rad(x: any) {\r\n            return x * Math.PI / 180;\r\n        };\r\n        onError(fnerr: any) {\r\n            console.log(fnerr);\r\n        }\r\n        getProfilePics(photoID: any, index: any) {\r\n            var self = this;\r\n\r\n            self.CustomerHttp.get('/GetProfilePic/' + photoID).then(function (response: any) {\r\n\r\n                //self.profilePic = \"http://www.spafoo.com\" + response.GetProfilePicResult;\r\n                self.ServiceData[index].userInfoField.profileField.photoField = \"http://www.spafoo.com\" + response.GetProfilePicResult;\r\n                //  alert(self.ServiceData[index].profileField.photoField);\r\n                self.$ionicLoading.hide();\r\n            }, function (error) {\r\n                if (error === null) {\r\n                    self.$ionicLoading.hide();\r\n                } else {\r\n                    console.log(error);\r\n                    self.$ionicLoading.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        GetProTagLine(UserID: any, index: any) {\r\n            var self = this;\r\n\r\n            self.CustomerHttp.get('/GetProTagLine/' + UserID).then(function (response: any) {\r\n                self.ServiceData[index].TagField = decodeURIComponent(decodeURI(response.GetProTagLineResult.Success));\r\n            }, function (error) {\r\n                if (error === null) {\r\n\r\n                } else {\r\n                    //console.log(error);\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        AnyProvider() {\r\n            var self = this;\r\n            console.log(\" All SErvice Data :::\", self.ProviderIDlst);\r\n\r\n            var ProIDs = -1 + \"|\" + self.ProviderIDlst\r\n\r\n\r\n            this.$state.go(\"MakeAppointment\", { userId: (ProIDs.substring(0, ProIDs.lastIndexOf('|'))), appointmentId: null, type: \"NORMAL\" });\r\n        }\r\n        GetMyRating(UserID: any, index: any) {\r\n            var self = this;\r\n            self.CustomerHttp.get('/GetMyRating/' + UserID).then(function (response: any) {\r\n                self.ServiceData[index].starField = parseInt(response.GetMyRatingResult.Success.split(':')[0]);\r\n                self.ServiceData[index].Rateperson = parseInt(response.GetMyRatingResult.Success.split(':')[1]);\r\n                //   alert(self.ServiceData[index].starField);\r\n            }, function (error) {\r\n                if (error === null) {\r\n\r\n                } else {\r\n                    console.log(error);\r\n\r\n                }\r\n            });\r\n        }\r\n        GoToProviderPortfolio(UserID: any) {\r\n            var self = this;\r\n\r\n            //this.$rootScope.dotest(UserID) \r\n            self.$window.localStorage.setItem('ProviderIDs', UserID);\r\n            self.$state.go(\"ProviderPortfolio\");\r\n        }\r\n    }\r\n\r\n\r\n    angular.module('spafoo.ctrl.ProviderList', []).controller('ProviderList', ProviderListController);\r\n\r\n}\r\n"],"sourceRoot":"/source/"}