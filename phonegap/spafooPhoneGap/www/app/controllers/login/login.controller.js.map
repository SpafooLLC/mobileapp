{"version":3,"sources":["controllers/login/login.controller.ts"],"names":[],"mappings":"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","file":"controllers/login/login.controller.js","sourcesContent":["module loginController {\r\n    export interface ILogin  {\r\n        doLogin(username: string, password: string): void;\r\n     \r\n\r\n    }\r\n    class loginController implements ILogin {\r\n        messages: string;\r\n        static $inject = ['$q', '$state', '$ionicPopup', '$ionicLoading', '$scope', '$location', 'CustomerHttp', '$window', 'toaster', '$rootScope'];\r\n       \r\n        constructor(\r\n            private $q: ng.IQService,\r\n            private $state: angular.ui.IStateService,\r\n            private $ionicPopup: ionic.popup.IonicPopupService,\r\n            private $ionicLoading: ionic.loading.IonicLoadingService,\r\n            private $scope: ng.IScope,\r\n            private $location: ng.ILocationService,\r\n            private CustomerHttp: spafoo.httpservice.ICustomerScreenHttp,\r\n            private $window: ng.IWindowService,\r\n            private toaster: ngtoaster.IToasterService,\r\n            private $rootScope :any\r\n        ) {\r\n\r\n        }\r\n\r\n\r\n        doLogin(username: string, password: string) {\r\n            var self = this;\r\n            if (username === null || username == '' || username == undefined) {                \r\n                self.messages = \"Please Enter User Name.\";\r\n                $(\"#PDone\").modal();\r\n                return;\r\n            }\r\n            if (password === null || password == '' || password == undefined) {\r\n                self.messages = \"Please Enter User Name.\";\r\n                $(\"#PDone\").modal();\r\n                return;\r\n            }\r\n\r\n            var data = {\r\n                Username: username,\r\n                Password: password,\r\n            };\r\n\r\n          \r\n            self.CustomerHttp.post(data, '/LoginUser').then(function (response) {\r\n                if (parseInt(response.Source)) {\r\n                    self.$window.localStorage.setItem('CustomerID', response.Source);\r\n                    self.$window.localStorage.setItem('LoginStatus', \"true\");                    \r\n                     self.getLoggedUser(response.Source);\r\n                 \r\n                }\r\n                else {\r\n                    self.$window.localStorage.setItem('CustomerID', \"0\");\r\n                    self.$window.localStorage.setItem('LoginStatus', \"false\");\r\n                    self.$rootScope.GetLoginStatus = false;\r\n                    self.messages = \"Login Failed, Please enter correct username and password\";\r\n                    $(\"#PDone\").modal();                    \r\n                }\r\n\r\n                  \r\n                \r\n            }, function (error) {\r\n                if (error === null) {\r\n                    //self.toastr.error('No internet connections. Check your connection settings', 'Error');\r\n                    self.$ionicLoading.hide();\r\n                } else {\r\n                    console.log(error);\r\n                    //self.toastr.error(error.Failure, 'Error');\r\n                    //self.$ionicPopup.alert({\r\n                    //    title: 'Error', template: error.Failure\r\n                    //});\r\n                    self.$ionicLoading.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n        getLoggedUser(UserID: any) {\r\n            var self = this;\r\n\r\n            //  var UserID = self.$window.localStorage.getItem('CustomerID');\r\n            self.CustomerHttp.get('/GetUserInfo/' + UserID).then(function (response) {\r\n                self.$rootScope.UserProfileName = response.GetUserInfoResult.displayNameField;\r\n                self.$window.localStorage.setItem('CustomerName', response.GetUserInfoResult.displayNameField);\r\n                self.$rootScope.GetLoginStatus = true;\r\n                self.$state.go(\"home\");\r\n               \r\n                self.$ionicLoading.hide();\r\n            }, function (error) {\r\n                if (error === null) {\r\n                    //self.toastr.error('No internet connections. Check your connection settings', 'Error');\r\n                    self.$ionicLoading.hide();\r\n                } else {\r\n                    console.log(error);\r\n                    //self.toastr.error(error.Failure, 'Error');\r\n                    //self.$ionicPopup.alert({\r\n                    //    title: 'Error', template: error.Failure\r\n                    //});\r\n                    self.$ionicLoading.hide();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    angular.module('spafoo.ctrl.login', []).controller('login', loginController);\r\n\r\n}"],"sourceRoot":"/source/"}