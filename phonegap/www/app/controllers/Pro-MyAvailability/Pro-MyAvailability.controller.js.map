{"version":3,"sources":["controllers/Pro-MyAvailability/Pro-MyAvailability.controller.ts"],"names":[],"mappings":"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","file":"controllers/Pro-MyAvailability/Pro-MyAvailability.controller.js","sourcesContent":["module ProMyAvailabilityController {\r\n\r\n    class ProMyAvailabilityController {\r\n        eventSource: any[];\r\n        uiConfig: any;\r\n        staticEvents: any;\r\n        staticEvents1: any;\r\n        userId: any;\r\n        serviceData: any[];\r\n        message: string;\r\n        static $inject = ['$q', '$state', '$scope', '$location', 'CustomerHttp', '$window', 'SharedHttp', 'moment', 'uiCalendarConfig'];\r\n        constructor(\r\n            private $q: ng.IQService,\r\n            private $state: angular.ui.IStateService,\r\n            private $scope: ng.IScope,\r\n            private $location: ng.ILocationService,\r\n            private CustomerHttp: spafoo.httpservice.ICustomerScreenHttp,\r\n            private $window: ng.IWindowService,\r\n            private SharedHttp: spafoo.httpsharedservice.ISharedHttp,\r\n            private moment: any,\r\n            private uiCalendarConfig: any,\r\n          \r\n\r\n        ) {\r\n            var self = this;\r\n\r\n            console.log(self.serviceData);\r\n            self.userId = window.localStorage.getItem('CustomerID');\r\n            self.uiConfig = {\r\n                calendar: {\r\n                    height: 450,\r\n                    editable: true,\r\n                    header: {\r\n\r\n\r\n                        right: 'today prev,next'\r\n                    },\r\n                    dayClick: function (date: any, jsEvent: any, view: any) {\r\n                   \r\n                        var selectedDate = moment(date).format('YYYY-MM-DD');\t\t\t\t    // set dateFrom based on user click on calendar\r\n                        self.staticEvents1[0].events.push({\r\n                            start: selectedDate, allday: true,\r\n                            dateField: moment(date).format('MMM DD'),\r\n                            dateFieldHidden: moment(date).format('MM/DD/YYYY'),\r\n                            proId: 0,\r\n                            color: '#008000'\r\n\r\n                        });\t\t\t\t    // update Calendar event dateFrom\r\n                        //self.selectedDate = $filter('date')(selectedDate, 'yyyy-MM-dd');;\t\t// update $scope.dateFrom\r\n                        //console.log('$scope.uiConfig', $scope.uiConfig);\r\n                        //console.log('uiCalendarConfig', uiCalendarConfig);\r\n                    },\r\n                    //eventDrop: this.alertOnDrop,\r\n                    //eventResize: this.alertOnResize,\r\n                    //eventRender: this.eventRender\r\n                }\r\n            };\r\n           \r\n\r\n           \r\n        \r\n                // any other event sources...\r\n\r\n   \r\n            self.availList()\r\n          \r\n            \r\n            //    [\r\n            //    { title: 'All Day Event', start: new Date(y, m, 1) },\r\n            //    { title: 'Long Event', start: new Date(y, m, d - 5), end: new Date(y, m, d - 2) },\r\n            //    { id: 999, title: 'Repeating Event', start: new Date(y, m, d - 3, 16, 0), allDay: false },\r\n            //    { id: 999, title: 'Repeating Event', start: new Date(y, m, d + 4, 16, 0), allDay: false },\r\n            //    { title: 'Birthday Party', start: new Date(y, m, d + 1, 19, 0), end: new Date(y, m, d + 1, 22, 30), allDay: false },\r\n            //    { title: 'Click for Google', start: new Date(y, m, 28), end: new Date(y, m, 29), url: 'http://google.com/' }\r\n            //];\r\n        }\r\n        alertOnEventClick(date: any, jsEvent: any, view: any) {\r\n            alert(date + jsEvent + view);\r\n        }\r\n        availList()\r\n        {\r\n\r\n            var self = this;\r\n            var val = new Array();\r\n            self.staticEvents1 =\r\n                [\r\n                    // your event source\r\n                    {\r\n                    events: [],\r\n                        color: 'green',     // an option!\r\n                        textColor: 'black' // an option!\r\n                    }];\r\n             \r\n                //    self.staticEvents[0].events.push(val)\r\n                self.eventSource = [self.staticEvents, self.staticEvents1];\r\n                self.CustomerHttp.get('/ListMyAvail/' + self.userId).then(function (res: any) {\r\n                   \r\n                self.serviceData = JSON.parse(res.ListMyAvailResult);\r\n\r\n                for (var i = 0; i < self.serviceData.length; i++) {\r\n                    var starthours = self.serviceData[i].StartTime.Hours;\r\n                    var endhours = self.serviceData[i].EndTime.Hours;\r\n                    if (parseInt(starthours) >= 12) {\r\n                        starthours = starthours - 12;\r\n                        starthours = starthours + \":\" + self.serviceData[i].StartTime.Minutes + \" PM\";\r\n                    }\r\n                    else {\r\n                        starthours = starthours + \":\" + self.serviceData[i].StartTime.Minutes + \" AM\";\r\n                    }\r\n                    if (parseInt(endhours) >= 12) {\r\n                        endhours = endhours - 12;\r\n                        endhours = endhours + \":\" + self.serviceData[i].EndTime.Minutes + \" PM\";\r\n                    }\r\n                    else {\r\n                        endhours = endhours + \":\" + self.serviceData[i].EndTime.Minutes + \" AM\";\r\n                    }\r\n                    var dateMonth = self.serviceData[i].Date;\r\n                    //dateMonth = dateMonth.replace(\"/Date(\", \"\").replace(\")/\", \"\");\r\n\r\n\r\n\r\n\r\n                 var   dateMonth1 = self.SharedHttp.getFormatedDate(dateMonth, \"MM DD\");\r\n                    var abcDate = (dateMonth).replace(\"/Date(\", \"\").replace(\")/\", \"\");\r\n                    var getmonth = '';\r\n                    //if ((dateMonth.date.getMonth() + 1) < 10) {\r\n                    //    getmonth = \"0\" + parseInt(dateMonth.date.getMonth() + 1);\r\n                    //}\r\n                    //else {\r\n                    //    getmonth = dateMonth.date.getMonth() + 1;\r\n                    //}\r\n\r\n                    console.log(starthours + \"  \" + endhours);\r\n                    val.push({\r\n\r\n                        //start: dateMonth.date.getFullYear() + \"-\" + getmonth + \"-\" + dateMonth.date.getDate(),\r\n                        //end: dateMonth.date.getFullYear() + \"-\" + getmonth + \"-\" + dateMonth.date.getDate(),\r\n                        startTime: starthours,\r\n                        endTime: endhours,\r\n                        id: self.serviceData[i].AvailID,\r\n                        proId: self.serviceData[i].ProviderID,\r\n                        dateField: dateMonth\r\n\r\n                        //start: '2016-09-01',\r\n                        //end: '2016-09-01'\r\n\r\n                    });\r\n                    self.staticEvents1[0].events.push({\r\n                     \r\n                    //start: dateMonth.date.getFullYear() + \"-\" + getmonth + \"-\" + dateMonth.date.getDate(),\r\n                    //    end: dateMonth.date.getFullYear() + \"-\" + getmonth + \"-\" + dateMonth.date.getDate(),\r\n                        start: moment(parseInt(abcDate)).format('YYYY-MM-DD'),\r\n                        //end: dateMonth.date.getFullYear() + \"-\" + getmonth+ \"-\" + dateMonth.date.getDate(),\r\n                        startTime: starthours,\r\n                        endTime: endhours,\r\n                       id: self.serviceData[i].AvailID,\r\n                      proId: self.serviceData[i].ProviderID,\r\n                      dateField: dateMonth1,\r\n                      dateFieldHidden: moment(parseInt(abcDate)).format('MM/DD/YYYY'),\r\n                      color: '#008000'\r\n\r\n                        //start: '2016-09-01',\r\n                        //end: '2016-09-01'\r\n\r\n                    });\r\n\r\n\r\n\r\n                }\r\n               \r\n               \r\n                //self.eventSource = self.staticEvents;\r\n                console.log(self.staticEvents);\r\n\r\n            }, function (e) {\r\n            });\r\n           \r\n\r\n        }\r\n        deleteEvent(avaiId: any, proId: any, $index: any)\r\n        {\r\n            alert(\"proid\" + proId);\r\n            alert(proId);\r\n            var con = confirm(\"Are you sure want to remove?\");\r\n            if (con) {\r\n                \r\n                this.staticEvents1[0].events.splice($index, 1);\r\n                this.CustomerHttp.get(\"/RemoveAvail/\" + avaiId).then(function (res) { }, function (e) { });\r\n            }\r\n\r\n        }\r\n        //doUpdate(data: any)\r\n        //{\r\n        //    var csv = \"\";\r\n        //    for (var i = 0; i < data.length; i++)\r\n        //    {\r\n                \r\n        //           csv += data[i].dateFieldHidden + \"_\" + data[i].startTime + \"_\" + data[i].endTime+\"|\"\r\n                \r\n\r\n        //    }\r\n        //    var jsonData = { CSV: csv, ProID: this.userId };\r\n        //    this.CustomerHttp.post(jsonData, \"/AddMyAvail\").then(function (res: any) { });\r\n        //}\r\n        doUpdate(data: any) {\r\n\r\n\r\n            var csv = \"\";\r\n\r\n            if (data == 0) {\r\n              \r\n                this.message = \"Add a event to proceed\";\r\n                $(\"#PDone\").modal(\"toggle\");\r\n                return;\r\n            }\r\n            console.log(data);\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (!data[i].hasOwnProperty('endTime') || !data[i].hasOwnProperty('startTime')) {\r\n                    alert(\"called has own property\" + !data[i].hasOwnProperty('endTime') + \"clled\" + !data[i].hasOwnProperty('startTime'))\r\n                    this.message = \"Choose time on respective date\";\r\n                    $(\"#PDone\").modal(\"toggle\");\r\n                    return;\r\n\r\n                }\r\n            }\r\n\r\n            console.log(data);\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n\r\n                csv += data[i].dateFieldHidden + \"_\" + data[i].startTime + \"_\" + data[i].endTime + \"|\"\r\n\r\n\r\n            }\r\n            var jsonData = { CSV: csv, ProID: this.userId };\r\n            this.CustomerHttp.post(jsonData, \"/AddMyAvail\").then(function (res: any) { });\r\n        }\r\n    }\r\n\r\n\r\n    angular.module('spafoo.ctrl.ProMyAvailability', []).controller('ProMyAvailability', ProMyAvailabilityController);\r\n\r\n}"],"sourceRoot":"/source/"}