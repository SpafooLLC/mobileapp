{"version":3,"sources":["controllers/ProviderPortfolio/ProviderPortfolio.controller.ts"],"names":[],"mappings":"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","file":"controllers/ProviderPortfolio/ProviderPortfolio.controller.js","sourcesContent":["module ProviderPortfolioController {\r\n    \r\n    class ProviderPortfolioController {\r\n        UserID: number;\r\n        ServiceData: any;\r\n        profilePic: string;\r\n        RatingField: string;\r\n        Rateperson: string;\r\n        TagField: string;\r\n        ProviderServiceList: any;\r\n        WorkSamplesList: any;\r\n        distance: string;\r\n        customerType: string;\r\n        static $inject = ['$q', '$state', '$ionicPopup', '$ionicLoading', '$scope', '$location', 'CustomerHttp', '$window', 'toaster', 'SharedHttp', '$stateParams'];\r\n        constructor(\r\n            private $q: ng.IQService,\r\n            private $state: angular.ui.IStateService,\r\n            private $ionicPopup: ionic.popup.IonicPopupService,\r\n            private $ionicLoading: ionic.loading.IonicLoadingService,\r\n            private $scope: ng.IScope,\r\n            private $location: ng.ILocationService,\r\n            private CustomerHttp: spafoo.httpservice.ICustomerScreenHttp,\r\n            private $window: ng.IWindowService,\r\n            private toaster: ngtoaster.IToasterService,\r\n            private SharedHttp: spafoo.httpsharedservice.ISharedHttp,\r\n            private $stateParams: angular.ui.IStateParamsService\r\n        ) {\r\n            var self = this;\r\n            //this.UserID = this.$window.localStorage.getItem('ProviderIDs');\r\n            self.UserID = $stateParams.userId;\r\n            self.distance = $stateParams.distance;\r\n            \r\n            self.getProviderPortfolio(this.UserID);\r\n            self.customerType = window.localStorage.getItem(\"Role\");\r\n         \r\n           $('.fancybox').fancybox();\r\n        }\r\n\r\n        getProviderPortfolio(UserID:any) {\r\n            var self = this;\r\n          \r\n            self.CustomerHttp.get('/GetUserInfo/' + UserID).then(function (response: any) {\r\n                self.ServiceData = response.GetUserInfoResult;\r\n                self.ServiceData.displayNameField = self.ServiceData.firstNameField + \" \" + self.ServiceData.lastNameField[0] + \".\";\r\n                 self.SharedHttp.getProfilePics(self.ServiceData.profileField.photoField).then(function (imgres) { self.profilePic = imgres; });\r\n                 self.SharedHttp.GetMyRating(UserID).then(function (res) { self.RatingField = res.split(':')[0] ; self.Rateperson = res.split(':')[1] });\r\n                self.SharedHttp.GetProTagLine(UserID).then(function (res) { self.TagField = res; });\r\n                var str = self.ServiceData.profileField.biographyField;\r\n                var uri_encoded = str.replace(/%([^\\d].)/, \"%25$1\");                \r\n                var decoded = decodeURIComponent(uri_encoded);\r\n                self.ServiceData.profileField.biographyField = decoded;\r\n                 self.SharedHttp.GetProviderServices(UserID).then(function (res) {self.ProviderServiceList = res; });\r\n                 self.SharedHttp.GetWorkSamples(UserID).then(function (res) { self.WorkSamplesList = res; });\r\n              \r\n               \r\n                 //self.GetProviderServices(UserID)\r\n\r\n                //alert(decodeURI(self.ServiceData.profileField.biographyField));\r\n            }, function (error) {\r\n                if (error === null) {\r\n\r\n                } else {\r\n                    console.log(error);\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        GoToProviderReview() {\r\n            var self = this;\r\n            self.$state.go('ProReviewListing', { userId: this.$stateParams.userId });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    angular.module('spafoo.ctrl.ProviderPortfolio',[]).controller('ProviderPortfolio',ProviderPortfolioController);\r\n\r\n}"],"sourceRoot":"/source/"}