//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SpafooWebService.ManageScheduled {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="rhSoap", Namespace="http://tempuri.org/")]
    public partial class rh : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddMyAvailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMyAvailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMyAvailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMyAvailJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAvailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public rh() {
            this.Url = global::SpafooWebService.Properties.Settings.Default.SpafooWebService_ManageScheduled_rh;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddMyAvailCompletedEventHandler AddMyAvailCompleted;
        
        /// <remarks/>
        public event AddMyAvailExCompletedEventHandler AddMyAvailExCompleted;
        
        /// <remarks/>
        public event ListMyAvailCompletedEventHandler ListMyAvailCompleted;
        
        /// <remarks/>
        public event ListMyAvailJSONCompletedEventHandler ListMyAvailJSONCompleted;
        
        /// <remarks/>
        public event RemoveAvailCompletedEventHandler RemoveAvailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMyAvail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddMyAvail(int ProID, string CSV) {
            this.Invoke("AddMyAvail", new object[] {
                        ProID,
                        CSV});
        }
        
        /// <remarks/>
        public void AddMyAvailAsync(int ProID, string CSV) {
            this.AddMyAvailAsync(ProID, CSV, null);
        }
        
        /// <remarks/>
        public void AddMyAvailAsync(int ProID, string CSV, object userState) {
            if ((this.AddMyAvailOperationCompleted == null)) {
                this.AddMyAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMyAvailOperationCompleted);
            }
            this.InvokeAsync("AddMyAvail", new object[] {
                        ProID,
                        CSV}, this.AddMyAvailOperationCompleted, userState);
        }
        
        private void OnAddMyAvailOperationCompleted(object arg) {
            if ((this.AddMyAvailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMyAvailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMyAvailEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddMyAvailEx(int ProID, string CSV) {
            this.Invoke("AddMyAvailEx", new object[] {
                        ProID,
                        CSV});
        }
        
        /// <remarks/>
        public void AddMyAvailExAsync(int ProID, string CSV) {
            this.AddMyAvailExAsync(ProID, CSV, null);
        }
        
        /// <remarks/>
        public void AddMyAvailExAsync(int ProID, string CSV, object userState) {
            if ((this.AddMyAvailExOperationCompleted == null)) {
                this.AddMyAvailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMyAvailExOperationCompleted);
            }
            this.InvokeAsync("AddMyAvailEx", new object[] {
                        ProID,
                        CSV}, this.AddMyAvailExOperationCompleted, userState);
        }
        
        private void OnAddMyAvailExOperationCompleted(object arg) {
            if ((this.AddMyAvailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMyAvailExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMyAvail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProAvailabilityInfo[] ListMyAvail(int ProID) {
            object[] results = this.Invoke("ListMyAvail", new object[] {
                        ProID});
            return ((ProAvailabilityInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListMyAvailAsync(int ProID) {
            this.ListMyAvailAsync(ProID, null);
        }
        
        /// <remarks/>
        public void ListMyAvailAsync(int ProID, object userState) {
            if ((this.ListMyAvailOperationCompleted == null)) {
                this.ListMyAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMyAvailOperationCompleted);
            }
            this.InvokeAsync("ListMyAvail", new object[] {
                        ProID}, this.ListMyAvailOperationCompleted, userState);
        }
        
        private void OnListMyAvailOperationCompleted(object arg) {
            if ((this.ListMyAvailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMyAvailCompleted(this, new ListMyAvailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMyAvailJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListMyAvailJSON(int ProID) {
            object[] results = this.Invoke("ListMyAvailJSON", new object[] {
                        ProID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListMyAvailJSONAsync(int ProID) {
            this.ListMyAvailJSONAsync(ProID, null);
        }
        
        /// <remarks/>
        public void ListMyAvailJSONAsync(int ProID, object userState) {
            if ((this.ListMyAvailJSONOperationCompleted == null)) {
                this.ListMyAvailJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMyAvailJSONOperationCompleted);
            }
            this.InvokeAsync("ListMyAvailJSON", new object[] {
                        ProID}, this.ListMyAvailJSONOperationCompleted, userState);
        }
        
        private void OnListMyAvailJSONOperationCompleted(object arg) {
            if ((this.ListMyAvailJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMyAvailJSONCompleted(this, new ListMyAvailJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveAvail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAvail(int ID) {
            this.Invoke("RemoveAvail", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void RemoveAvailAsync(int ID) {
            this.RemoveAvailAsync(ID, null);
        }
        
        /// <remarks/>
        public void RemoveAvailAsync(int ID, object userState) {
            if ((this.RemoveAvailOperationCompleted == null)) {
                this.RemoveAvailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAvailOperationCompleted);
            }
            this.InvokeAsync("RemoveAvail", new object[] {
                        ID}, this.RemoveAvailOperationCompleted, userState);
        }
        
        private void OnRemoveAvailOperationCompleted(object arg) {
            if ((this.RemoveAvailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAvailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProAvailabilityInfo {
        
        private int availIDField;
        
        private System.DateTime dateField;
        
        private TimeSpan startTimeField;
        
        private TimeSpan endTimeField;
        
        private int providerIDField;
        
        /// <remarks/>
        public int AvailID {
            get {
                return this.availIDField;
            }
            set {
                this.availIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public TimeSpan StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public TimeSpan EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TimeSpan {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddMyAvailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddMyAvailExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListMyAvailCompletedEventHandler(object sender, ListMyAvailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMyAvailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMyAvailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProAvailabilityInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProAvailabilityInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListMyAvailJSONCompletedEventHandler(object sender, ListMyAvailJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMyAvailJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMyAvailJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveAvailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591