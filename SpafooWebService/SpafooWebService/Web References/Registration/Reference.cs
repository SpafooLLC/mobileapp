//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SpafooWebService.Registration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="rhSoap", Namespace="http://tempuri.org/")]
    public partial class rh : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserReponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormUserReponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStepQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFormUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsFormUserValidatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFormUserResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormUserServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserHardwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserHardwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserHardwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUserHardwareOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public rh() {
            this.Url = global::SpafooWebService.Properties.Settings.Default.SpafooWebService_Registration_rh;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event ListQuestionsCompletedEventHandler ListQuestionsCompleted;
        
        /// <remarks/>
        public event GetUserReponseCompletedEventHandler GetUserReponseCompleted;
        
        /// <remarks/>
        public event GetFormUserReponseCompletedEventHandler GetFormUserReponseCompleted;
        
        /// <remarks/>
        public event GetStepQuestionsCompletedEventHandler GetStepQuestionsCompleted;
        
        /// <remarks/>
        public event AddCategoryCompletedEventHandler AddCategoryCompleted;
        
        /// <remarks/>
        public event GetCategoryCompletedEventHandler GetCategoryCompleted;
        
        /// <remarks/>
        public event UpdateCategoryCompletedEventHandler UpdateCategoryCompleted;
        
        /// <remarks/>
        public event AddQuestionCompletedEventHandler AddQuestionCompleted;
        
        /// <remarks/>
        public event GetQuestionCompletedEventHandler GetQuestionCompleted;
        
        /// <remarks/>
        public event RemoveQuestionCompletedEventHandler RemoveQuestionCompleted;
        
        /// <remarks/>
        public event UpdateQuestionCompletedEventHandler UpdateQuestionCompleted;
        
        /// <remarks/>
        public event AddOptionCompletedEventHandler AddOptionCompleted;
        
        /// <remarks/>
        public event RemoveOptionCompletedEventHandler RemoveOptionCompleted;
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event ListOfUsersCompletedEventHandler ListOfUsersCompleted;
        
        /// <remarks/>
        public event UpdateUserStatusCompletedEventHandler UpdateUserStatusCompleted;
        
        /// <remarks/>
        public event UpdateActiveStatusCompletedEventHandler UpdateActiveStatusCompleted;
        
        /// <remarks/>
        public event UpdateUserNotesCompletedEventHandler UpdateUserNotesCompleted;
        
        /// <remarks/>
        public event GetUserNotesCompletedEventHandler GetUserNotesCompleted;
        
        /// <remarks/>
        public event AddFormUserCompletedEventHandler AddFormUserCompleted;
        
        /// <remarks/>
        public event IsFormUserValidatedCompletedEventHandler IsFormUserValidatedCompleted;
        
        /// <remarks/>
        public event RemoveResponseCompletedEventHandler RemoveResponseCompleted;
        
        /// <remarks/>
        public event SaveFormUserResponseCompletedEventHandler SaveFormUserResponseCompleted;
        
        /// <remarks/>
        public event GetFormUserServicesCompletedEventHandler GetFormUserServicesCompleted;
        
        /// <remarks/>
        public event AddUserHardwareCompletedEventHandler AddUserHardwareCompleted;
        
        /// <remarks/>
        public event UpdateUserHardwareCompletedEventHandler UpdateUserHardwareCompleted;
        
        /// <remarks/>
        public event GetUserHardwareCompletedEventHandler GetUserHardwareCompleted;
        
        /// <remarks/>
        public event ListUserHardwareCompletedEventHandler ListUserHardwareCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListQuestions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Steps[] ListQuestions() {
            object[] results = this.Invoke("ListQuestions", new object[0]);
            return ((Steps[])(results[0]));
        }
        
        /// <remarks/>
        public void ListQuestionsAsync() {
            this.ListQuestionsAsync(null);
        }
        
        /// <remarks/>
        public void ListQuestionsAsync(object userState) {
            if ((this.ListQuestionsOperationCompleted == null)) {
                this.ListQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListQuestionsOperationCompleted);
            }
            this.InvokeAsync("ListQuestions", new object[0], this.ListQuestionsOperationCompleted, userState);
        }
        
        private void OnListQuestionsOperationCompleted(object arg) {
            if ((this.ListQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListQuestionsCompleted(this, new ListQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserReponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Steps[] GetUserReponse(int ID) {
            object[] results = this.Invoke("GetUserReponse", new object[] {
                        ID});
            return ((Steps[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserReponseAsync(int ID) {
            this.GetUserReponseAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetUserReponseAsync(int ID, object userState) {
            if ((this.GetUserReponseOperationCompleted == null)) {
                this.GetUserReponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserReponseOperationCompleted);
            }
            this.InvokeAsync("GetUserReponse", new object[] {
                        ID}, this.GetUserReponseOperationCompleted, userState);
        }
        
        private void OnGetUserReponseOperationCompleted(object arg) {
            if ((this.GetUserReponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserReponseCompleted(this, new GetUserReponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormUserReponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FormUserSteps[] GetFormUserReponse(string username) {
            object[] results = this.Invoke("GetFormUserReponse", new object[] {
                        username});
            return ((FormUserSteps[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormUserReponseAsync(string username) {
            this.GetFormUserReponseAsync(username, null);
        }
        
        /// <remarks/>
        public void GetFormUserReponseAsync(string username, object userState) {
            if ((this.GetFormUserReponseOperationCompleted == null)) {
                this.GetFormUserReponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormUserReponseOperationCompleted);
            }
            this.InvokeAsync("GetFormUserReponse", new object[] {
                        username}, this.GetFormUserReponseOperationCompleted, userState);
        }
        
        private void OnGetFormUserReponseOperationCompleted(object arg) {
            if ((this.GetFormUserReponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormUserReponseCompleted(this, new GetFormUserReponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStepQuestions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QCategoryInfo[] GetStepQuestions(int StepID) {
            object[] results = this.Invoke("GetStepQuestions", new object[] {
                        StepID});
            return ((QCategoryInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStepQuestionsAsync(int StepID) {
            this.GetStepQuestionsAsync(StepID, null);
        }
        
        /// <remarks/>
        public void GetStepQuestionsAsync(int StepID, object userState) {
            if ((this.GetStepQuestionsOperationCompleted == null)) {
                this.GetStepQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStepQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetStepQuestions", new object[] {
                        StepID}, this.GetStepQuestionsOperationCompleted, userState);
        }
        
        private void OnGetStepQuestionsOperationCompleted(object arg) {
            if ((this.GetStepQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStepQuestionsCompleted(this, new GetStepQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCategory(int StepID, string QDesc) {
            object[] results = this.Invoke("AddCategory", new object[] {
                        StepID,
                        QDesc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCategoryAsync(int StepID, string QDesc) {
            this.AddCategoryAsync(StepID, QDesc, null);
        }
        
        /// <remarks/>
        public void AddCategoryAsync(int StepID, string QDesc, object userState) {
            if ((this.AddCategoryOperationCompleted == null)) {
                this.AddCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCategoryOperationCompleted);
            }
            this.InvokeAsync("AddCategory", new object[] {
                        StepID,
                        QDesc}, this.AddCategoryOperationCompleted, userState);
        }
        
        private void OnAddCategoryOperationCompleted(object arg) {
            if ((this.AddCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCategoryCompleted(this, new AddCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QCategoryInfo GetCategory(int CatID) {
            object[] results = this.Invoke("GetCategory", new object[] {
                        CatID});
            return ((QCategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryAsync(int CatID) {
            this.GetCategoryAsync(CatID, null);
        }
        
        /// <remarks/>
        public void GetCategoryAsync(int CatID, object userState) {
            if ((this.GetCategoryOperationCompleted == null)) {
                this.GetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryOperationCompleted);
            }
            this.InvokeAsync("GetCategory", new object[] {
                        CatID}, this.GetCategoryOperationCompleted, userState);
        }
        
        private void OnGetCategoryOperationCompleted(object arg) {
            if ((this.GetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryCompleted(this, new GetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCategory(int CatID, string Desc, string OrderID) {
            this.Invoke("UpdateCategory", new object[] {
                        CatID,
                        Desc,
                        OrderID});
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CatID, string Desc, string OrderID) {
            this.UpdateCategoryAsync(CatID, Desc, OrderID, null);
        }
        
        /// <remarks/>
        public void UpdateCategoryAsync(int CatID, string Desc, string OrderID, object userState) {
            if ((this.UpdateCategoryOperationCompleted == null)) {
                this.UpdateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateCategory", new object[] {
                        CatID,
                        Desc,
                        OrderID}, this.UpdateCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateCategoryOperationCompleted(object arg) {
            if ((this.UpdateCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCategoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddQuestion(string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, string OrderID) {
            object[] results = this.Invoke("AddQuestion", new object[] {
                        QuestionText,
                        QType,
                        QCategoryID,
                        IsRequired,
                        IsVisible,
                        IsFullWidth,
                        HintText,
                        OrderID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddQuestionAsync(string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, string OrderID) {
            this.AddQuestionAsync(QuestionText, QType, QCategoryID, IsRequired, IsVisible, IsFullWidth, HintText, OrderID, null);
        }
        
        /// <remarks/>
        public void AddQuestionAsync(string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, string OrderID, object userState) {
            if ((this.AddQuestionOperationCompleted == null)) {
                this.AddQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQuestionOperationCompleted);
            }
            this.InvokeAsync("AddQuestion", new object[] {
                        QuestionText,
                        QType,
                        QCategoryID,
                        IsRequired,
                        IsVisible,
                        IsFullWidth,
                        HintText,
                        OrderID}, this.AddQuestionOperationCompleted, userState);
        }
        
        private void OnAddQuestionOperationCompleted(object arg) {
            if ((this.AddQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQuestionCompleted(this, new AddQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionInfo GetQuestion(string QID) {
            object[] results = this.Invoke("GetQuestion", new object[] {
                        QID});
            return ((QuestionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionAsync(string QID) {
            this.GetQuestionAsync(QID, null);
        }
        
        /// <remarks/>
        public void GetQuestionAsync(string QID, object userState) {
            if ((this.GetQuestionOperationCompleted == null)) {
                this.GetQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionOperationCompleted);
            }
            this.InvokeAsync("GetQuestion", new object[] {
                        QID}, this.GetQuestionOperationCompleted, userState);
        }
        
        private void OnGetQuestionOperationCompleted(object arg) {
            if ((this.GetQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionCompleted(this, new GetQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveQuestion(string QID) {
            this.Invoke("RemoveQuestion", new object[] {
                        QID});
        }
        
        /// <remarks/>
        public void RemoveQuestionAsync(string QID) {
            this.RemoveQuestionAsync(QID, null);
        }
        
        /// <remarks/>
        public void RemoveQuestionAsync(string QID, object userState) {
            if ((this.RemoveQuestionOperationCompleted == null)) {
                this.RemoveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveQuestion", new object[] {
                        QID}, this.RemoveQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveQuestionOperationCompleted(object arg) {
            if ((this.RemoveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveQuestionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateQuestion(int QuestionID, string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, int OrderID) {
            this.Invoke("UpdateQuestion", new object[] {
                        QuestionID,
                        QuestionText,
                        QType,
                        QCategoryID,
                        IsRequired,
                        IsVisible,
                        IsFullWidth,
                        HintText,
                        OrderID});
        }
        
        /// <remarks/>
        public void UpdateQuestionAsync(int QuestionID, string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, int OrderID) {
            this.UpdateQuestionAsync(QuestionID, QuestionText, QType, QCategoryID, IsRequired, IsVisible, IsFullWidth, HintText, OrderID, null);
        }
        
        /// <remarks/>
        public void UpdateQuestionAsync(int QuestionID, string QuestionText, string QType, int QCategoryID, bool IsRequired, bool IsVisible, bool IsFullWidth, string HintText, int OrderID, object userState) {
            if ((this.UpdateQuestionOperationCompleted == null)) {
                this.UpdateQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateQuestion", new object[] {
                        QuestionID,
                        QuestionText,
                        QType,
                        QCategoryID,
                        IsRequired,
                        IsVisible,
                        IsFullWidth,
                        HintText,
                        OrderID}, this.UpdateQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateQuestionOperationCompleted(object arg) {
            if ((this.UpdateQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuestionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOption", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOption(string QID, string OptionText, string OnSelect) {
            this.Invoke("AddOption", new object[] {
                        QID,
                        OptionText,
                        OnSelect});
        }
        
        /// <remarks/>
        public void AddOptionAsync(string QID, string OptionText, string OnSelect) {
            this.AddOptionAsync(QID, OptionText, OnSelect, null);
        }
        
        /// <remarks/>
        public void AddOptionAsync(string QID, string OptionText, string OnSelect, object userState) {
            if ((this.AddOptionOperationCompleted == null)) {
                this.AddOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOptionOperationCompleted);
            }
            this.InvokeAsync("AddOption", new object[] {
                        QID,
                        OptionText,
                        OnSelect}, this.AddOptionOperationCompleted, userState);
        }
        
        private void OnAddOptionOperationCompleted(object arg) {
            if ((this.AddOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveOption", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveOption(string OID) {
            this.Invoke("RemoveOption", new object[] {
                        OID});
        }
        
        /// <remarks/>
        public void RemoveOptionAsync(string OID) {
            this.RemoveOptionAsync(OID, null);
        }
        
        /// <remarks/>
        public void RemoveOptionAsync(string OID, object userState) {
            if ((this.RemoveOptionOperationCompleted == null)) {
                this.RemoveOptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOptionOperationCompleted);
            }
            this.InvokeAsync("RemoveOption", new object[] {
                        OID}, this.RemoveOptionOperationCompleted, userState);
        }
        
        private void OnRemoveOptionOperationCompleted(object arg) {
            if ((this.RemoveOptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterUser(string UN, string FN, string LN, string EM, string P, string PH, string MB, string STR, string City, string State, string Zip, string GDR, string PID, string UR, string SRVC) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        UN,
                        FN,
                        LN,
                        EM,
                        P,
                        PH,
                        MB,
                        STR,
                        City,
                        State,
                        Zip,
                        GDR,
                        PID,
                        UR,
                        SRVC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string UN, string FN, string LN, string EM, string P, string PH, string MB, string STR, string City, string State, string Zip, string GDR, string PID, string UR, string SRVC) {
            this.RegisterUserAsync(UN, FN, LN, EM, P, PH, MB, STR, City, State, Zip, GDR, PID, UR, SRVC, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(
                    string UN, 
                    string FN, 
                    string LN, 
                    string EM, 
                    string P, 
                    string PH, 
                    string MB, 
                    string STR, 
                    string City, 
                    string State, 
                    string Zip, 
                    string GDR, 
                    string PID, 
                    string UR, 
                    string SRVC, 
                    object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        UN,
                        FN,
                        LN,
                        EM,
                        P,
                        PH,
                        MB,
                        STR,
                        City,
                        State,
                        Zip,
                        GDR,
                        PID,
                        UR,
                        SRVC}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOfUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NSR_User[] ListOfUsers(string S, string K) {
            object[] results = this.Invoke("ListOfUsers", new object[] {
                        S,
                        K});
            return ((NSR_User[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOfUsersAsync(string S, string K) {
            this.ListOfUsersAsync(S, K, null);
        }
        
        /// <remarks/>
        public void ListOfUsersAsync(string S, string K, object userState) {
            if ((this.ListOfUsersOperationCompleted == null)) {
                this.ListOfUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfUsersOperationCompleted);
            }
            this.InvokeAsync("ListOfUsers", new object[] {
                        S,
                        K}, this.ListOfUsersOperationCompleted, userState);
        }
        
        private void OnListOfUsersOperationCompleted(object arg) {
            if ((this.ListOfUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfUsersCompleted(this, new ListOfUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserStatus(int PID, int UID, int Status, string R) {
            object[] results = this.Invoke("UpdateUserStatus", new object[] {
                        PID,
                        UID,
                        Status,
                        R});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserStatusAsync(int PID, int UID, int Status, string R) {
            this.UpdateUserStatusAsync(PID, UID, Status, R, null);
        }
        
        /// <remarks/>
        public void UpdateUserStatusAsync(int PID, int UID, int Status, string R, object userState) {
            if ((this.UpdateUserStatusOperationCompleted == null)) {
                this.UpdateUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateUserStatus", new object[] {
                        PID,
                        UID,
                        Status,
                        R}, this.UpdateUserStatusOperationCompleted, userState);
        }
        
        private void OnUpdateUserStatusOperationCompleted(object arg) {
            if ((this.UpdateUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserStatusCompleted(this, new UpdateUserStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateActiveStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateActiveStatus(int UID, string Status) {
            object[] results = this.Invoke("UpdateActiveStatus", new object[] {
                        UID,
                        Status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateActiveStatusAsync(int UID, string Status) {
            this.UpdateActiveStatusAsync(UID, Status, null);
        }
        
        /// <remarks/>
        public void UpdateActiveStatusAsync(int UID, string Status, object userState) {
            if ((this.UpdateActiveStatusOperationCompleted == null)) {
                this.UpdateActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateActiveStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateActiveStatus", new object[] {
                        UID,
                        Status}, this.UpdateActiveStatusOperationCompleted, userState);
        }
        
        private void OnUpdateActiveStatusOperationCompleted(object arg) {
            if ((this.UpdateActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateActiveStatusCompleted(this, new UpdateActiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUserNotes(int UID, string N) {
            this.Invoke("UpdateUserNotes", new object[] {
                        UID,
                        N});
        }
        
        /// <remarks/>
        public void UpdateUserNotesAsync(int UID, string N) {
            this.UpdateUserNotesAsync(UID, N, null);
        }
        
        /// <remarks/>
        public void UpdateUserNotesAsync(int UID, string N, object userState) {
            if ((this.UpdateUserNotesOperationCompleted == null)) {
                this.UpdateUserNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserNotesOperationCompleted);
            }
            this.InvokeAsync("UpdateUserNotes", new object[] {
                        UID,
                        N}, this.UpdateUserNotesOperationCompleted, userState);
        }
        
        private void OnUpdateUserNotesOperationCompleted(object arg) {
            if ((this.UpdateUserNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserNotesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNotes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserNotes(int UID) {
            object[] results = this.Invoke("GetUserNotes", new object[] {
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNotesAsync(int UID) {
            this.GetUserNotesAsync(UID, null);
        }
        
        /// <remarks/>
        public void GetUserNotesAsync(int UID, object userState) {
            if ((this.GetUserNotesOperationCompleted == null)) {
                this.GetUserNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNotesOperationCompleted);
            }
            this.InvokeAsync("GetUserNotes", new object[] {
                        UID}, this.GetUserNotesOperationCompleted, userState);
        }
        
        private void OnGetUserNotesOperationCompleted(object arg) {
            if ((this.GetUserNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNotesCompleted(this, new GetUserNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFormUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFormUser(string un, string pwd, string FirstName, string LastName, string Street, string Cit, string State, string Zip, string Phone, string Mobile, string Gender, string Email) {
            this.Invoke("AddFormUser", new object[] {
                        un,
                        pwd,
                        FirstName,
                        LastName,
                        Street,
                        Cit,
                        State,
                        Zip,
                        Phone,
                        Mobile,
                        Gender,
                        Email});
        }
        
        /// <remarks/>
        public void AddFormUserAsync(string un, string pwd, string FirstName, string LastName, string Street, string Cit, string State, string Zip, string Phone, string Mobile, string Gender, string Email) {
            this.AddFormUserAsync(un, pwd, FirstName, LastName, Street, Cit, State, Zip, Phone, Mobile, Gender, Email, null);
        }
        
        /// <remarks/>
        public void AddFormUserAsync(string un, string pwd, string FirstName, string LastName, string Street, string Cit, string State, string Zip, string Phone, string Mobile, string Gender, string Email, object userState) {
            if ((this.AddFormUserOperationCompleted == null)) {
                this.AddFormUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFormUserOperationCompleted);
            }
            this.InvokeAsync("AddFormUser", new object[] {
                        un,
                        pwd,
                        FirstName,
                        LastName,
                        Street,
                        Cit,
                        State,
                        Zip,
                        Phone,
                        Mobile,
                        Gender,
                        Email}, this.AddFormUserOperationCompleted, userState);
        }
        
        private void OnAddFormUserOperationCompleted(object arg) {
            if ((this.AddFormUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFormUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsFormUserValidated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsFormUserValidated(string un, string p) {
            object[] results = this.Invoke("IsFormUserValidated", new object[] {
                        un,
                        p});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsFormUserValidatedAsync(string un, string p) {
            this.IsFormUserValidatedAsync(un, p, null);
        }
        
        /// <remarks/>
        public void IsFormUserValidatedAsync(string un, string p, object userState) {
            if ((this.IsFormUserValidatedOperationCompleted == null)) {
                this.IsFormUserValidatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsFormUserValidatedOperationCompleted);
            }
            this.InvokeAsync("IsFormUserValidated", new object[] {
                        un,
                        p}, this.IsFormUserValidatedOperationCompleted, userState);
        }
        
        private void OnIsFormUserValidatedOperationCompleted(object arg) {
            if ((this.IsFormUserValidatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsFormUserValidatedCompleted(this, new IsFormUserValidatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveResponse(string un) {
            this.Invoke("RemoveResponse", new object[] {
                        un});
        }
        
        /// <remarks/>
        public void RemoveResponseAsync(string un) {
            this.RemoveResponseAsync(un, null);
        }
        
        /// <remarks/>
        public void RemoveResponseAsync(string un, object userState) {
            if ((this.RemoveResponseOperationCompleted == null)) {
                this.RemoveResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveResponseOperationCompleted);
            }
            this.InvokeAsync("RemoveResponse", new object[] {
                        un}, this.RemoveResponseOperationCompleted, userState);
        }
        
        private void OnRemoveResponseOperationCompleted(object arg) {
            if ((this.RemoveResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveResponseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFormUserResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveFormUserResponse(string UN, string FN, string LN, string EM, string P, string PH, string MB, string STR, string City, string State, string Zip, string GDR, string PID, string UR, string SRVC) {
            object[] results = this.Invoke("SaveFormUserResponse", new object[] {
                        UN,
                        FN,
                        LN,
                        EM,
                        P,
                        PH,
                        MB,
                        STR,
                        City,
                        State,
                        Zip,
                        GDR,
                        PID,
                        UR,
                        SRVC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFormUserResponseAsync(string UN, string FN, string LN, string EM, string P, string PH, string MB, string STR, string City, string State, string Zip, string GDR, string PID, string UR, string SRVC) {
            this.SaveFormUserResponseAsync(UN, FN, LN, EM, P, PH, MB, STR, City, State, Zip, GDR, PID, UR, SRVC, null);
        }
        
        /// <remarks/>
        public void SaveFormUserResponseAsync(
                    string UN, 
                    string FN, 
                    string LN, 
                    string EM, 
                    string P, 
                    string PH, 
                    string MB, 
                    string STR, 
                    string City, 
                    string State, 
                    string Zip, 
                    string GDR, 
                    string PID, 
                    string UR, 
                    string SRVC, 
                    object userState) {
            if ((this.SaveFormUserResponseOperationCompleted == null)) {
                this.SaveFormUserResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFormUserResponseOperationCompleted);
            }
            this.InvokeAsync("SaveFormUserResponse", new object[] {
                        UN,
                        FN,
                        LN,
                        EM,
                        P,
                        PH,
                        MB,
                        STR,
                        City,
                        State,
                        Zip,
                        GDR,
                        PID,
                        UR,
                        SRVC}, this.SaveFormUserResponseOperationCompleted, userState);
        }
        
        private void OnSaveFormUserResponseOperationCompleted(object arg) {
            if ((this.SaveFormUserResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFormUserResponseCompleted(this, new SaveFormUserResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormUserServices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceInfo[] GetFormUserServices(string un) {
            object[] results = this.Invoke("GetFormUserServices", new object[] {
                        un});
            return ((ServiceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormUserServicesAsync(string un) {
            this.GetFormUserServicesAsync(un, null);
        }
        
        /// <remarks/>
        public void GetFormUserServicesAsync(string un, object userState) {
            if ((this.GetFormUserServicesOperationCompleted == null)) {
                this.GetFormUserServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormUserServicesOperationCompleted);
            }
            this.InvokeAsync("GetFormUserServices", new object[] {
                        un}, this.GetFormUserServicesOperationCompleted, userState);
        }
        
        private void OnGetFormUserServicesOperationCompleted(object arg) {
            if ((this.GetFormUserServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormUserServicesCompleted(this, new GetFormUserServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserHardware", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserHardware(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion) {
            object[] results = this.Invoke("AddUserHardware", new object[] {
                        UserID,
                        HardwareName,
                        DeviceToken,
                        IsWebVersion});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserHardwareAsync(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion) {
            this.AddUserHardwareAsync(UserID, HardwareName, DeviceToken, IsWebVersion, null);
        }
        
        /// <remarks/>
        public void AddUserHardwareAsync(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion, object userState) {
            if ((this.AddUserHardwareOperationCompleted == null)) {
                this.AddUserHardwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserHardwareOperationCompleted);
            }
            this.InvokeAsync("AddUserHardware", new object[] {
                        UserID,
                        HardwareName,
                        DeviceToken,
                        IsWebVersion}, this.AddUserHardwareOperationCompleted, userState);
        }
        
        private void OnAddUserHardwareOperationCompleted(object arg) {
            if ((this.AddUserHardwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserHardwareCompleted(this, new AddUserHardwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserHardware", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserHardware(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion) {
            object[] results = this.Invoke("UpdateUserHardware", new object[] {
                        UserID,
                        HardwareName,
                        DeviceToken,
                        IsWebVersion});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserHardwareAsync(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion) {
            this.UpdateUserHardwareAsync(UserID, HardwareName, DeviceToken, IsWebVersion, null);
        }
        
        /// <remarks/>
        public void UpdateUserHardwareAsync(int UserID, string HardwareName, string DeviceToken, bool IsWebVersion, object userState) {
            if ((this.UpdateUserHardwareOperationCompleted == null)) {
                this.UpdateUserHardwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserHardwareOperationCompleted);
            }
            this.InvokeAsync("UpdateUserHardware", new object[] {
                        UserID,
                        HardwareName,
                        DeviceToken,
                        IsWebVersion}, this.UpdateUserHardwareOperationCompleted, userState);
        }
        
        private void OnUpdateUserHardwareOperationCompleted(object arg) {
            if ((this.UpdateUserHardwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserHardwareCompleted(this, new UpdateUserHardwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserHardware", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NS_UserHardware[] GetUserHardware(int UserID) {
            object[] results = this.Invoke("GetUserHardware", new object[] {
                        UserID});
            return ((NS_UserHardware[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserHardwareAsync(int UserID) {
            this.GetUserHardwareAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetUserHardwareAsync(int UserID, object userState) {
            if ((this.GetUserHardwareOperationCompleted == null)) {
                this.GetUserHardwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserHardwareOperationCompleted);
            }
            this.InvokeAsync("GetUserHardware", new object[] {
                        UserID}, this.GetUserHardwareOperationCompleted, userState);
        }
        
        private void OnGetUserHardwareOperationCompleted(object arg) {
            if ((this.GetUserHardwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserHardwareCompleted(this, new GetUserHardwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListUserHardware", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NS_UserHardware[] ListUserHardware() {
            object[] results = this.Invoke("ListUserHardware", new object[0]);
            return ((NS_UserHardware[])(results[0]));
        }
        
        /// <remarks/>
        public void ListUserHardwareAsync() {
            this.ListUserHardwareAsync(null);
        }
        
        /// <remarks/>
        public void ListUserHardwareAsync(object userState) {
            if ((this.ListUserHardwareOperationCompleted == null)) {
                this.ListUserHardwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUserHardwareOperationCompleted);
            }
            this.InvokeAsync("ListUserHardware", new object[0], this.ListUserHardwareOperationCompleted, userState);
        }
        
        private void OnListUserHardwareOperationCompleted(object arg) {
            if ((this.ListUserHardwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUserHardwareCompleted(this, new ListUserHardwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Steps {
        
        private int userIDField;
        
        private int stepIDField;
        
        private QCategoryInfo[] categoriesField;
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int StepID {
            get {
                return this.stepIDField;
            }
            set {
                this.stepIDField = value;
            }
        }
        
        /// <remarks/>
        public QCategoryInfo[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QCategoryInfo {
        
        private int qCategoryIDField;
        
        private string qCategoryDescField;
        
        private bool visibilityField;
        
        private int stepIDField;
        
        private int userIDField;
        
        private int orderIDField;
        
        private QuestionInfo[] questionsField;
        
        /// <remarks/>
        public int QCategoryID {
            get {
                return this.qCategoryIDField;
            }
            set {
                this.qCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string QCategoryDesc {
            get {
                return this.qCategoryDescField;
            }
            set {
                this.qCategoryDescField = value;
            }
        }
        
        /// <remarks/>
        public bool Visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        public int StepID {
            get {
                return this.stepIDField;
            }
            set {
                this.stepIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public QuestionInfo[] Questions {
            get {
                return this.questionsField;
            }
            set {
                this.questionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QuestionInfo {
        
        private int questionIDField;
        
        private int userIDField;
        
        private string questionTextField;
        
        private int orderIDField;
        
        private string qTypeField;
        
        private string qTypeSubField;
        
        private int qCategoryIDField;
        
        private QuestionOptionInfo[] optionsField;
        
        private string profilePropertyField;
        
        private bool isVisibleField;
        
        private bool isRequiredField;
        
        private string hintTextField;
        
        private bool isFullWidthField;
        
        private int optionIDField;
        
        private string optionTextField;
        
        private int responseIDField;
        
        /// <remarks/>
        public int QuestionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string QuestionText {
            get {
                return this.questionTextField;
            }
            set {
                this.questionTextField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string QType {
            get {
                return this.qTypeField;
            }
            set {
                this.qTypeField = value;
            }
        }
        
        /// <remarks/>
        public string QTypeSub {
            get {
                return this.qTypeSubField;
            }
            set {
                this.qTypeSubField = value;
            }
        }
        
        /// <remarks/>
        public int QCategoryID {
            get {
                return this.qCategoryIDField;
            }
            set {
                this.qCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public QuestionOptionInfo[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string ProfileProperty {
            get {
                return this.profilePropertyField;
            }
            set {
                this.profilePropertyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVisible {
            get {
                return this.isVisibleField;
            }
            set {
                this.isVisibleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string HintText {
            get {
                return this.hintTextField;
            }
            set {
                this.hintTextField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFullWidth {
            get {
                return this.isFullWidthField;
            }
            set {
                this.isFullWidthField = value;
            }
        }
        
        /// <remarks/>
        public int OptionID {
            get {
                return this.optionIDField;
            }
            set {
                this.optionIDField = value;
            }
        }
        
        /// <remarks/>
        public string OptionText {
            get {
                return this.optionTextField;
            }
            set {
                this.optionTextField = value;
            }
        }
        
        /// <remarks/>
        public int ResponseID {
            get {
                return this.responseIDField;
            }
            set {
                this.responseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class QuestionOptionInfo {
        
        private int questionIDField;
        
        private string optionTextField;
        
        private int orderIDField;
        
        private int optionIDField;
        
        private int onSelectField;
        
        private string profilePropertyField;
        
        /// <remarks/>
        public int QuestionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        public string OptionText {
            get {
                return this.optionTextField;
            }
            set {
                this.optionTextField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public int OptionID {
            get {
                return this.optionIDField;
            }
            set {
                this.optionIDField = value;
            }
        }
        
        /// <remarks/>
        public int OnSelect {
            get {
                return this.onSelectField;
            }
            set {
                this.onSelectField = value;
            }
        }
        
        /// <remarks/>
        public string ProfileProperty {
            get {
                return this.profilePropertyField;
            }
            set {
                this.profilePropertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NS_UserHardware {
        
        private int userIDField;
        
        private string hardwareNameField;
        
        private string deviceTokenField;
        
        private bool isWebVersionField;
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string HardwareName {
            get {
                return this.hardwareNameField;
            }
            set {
                this.hardwareNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceToken {
            get {
                return this.deviceTokenField;
            }
            set {
                this.deviceTokenField = value;
            }
        }
        
        /// <remarks/>
        public bool IsWebVersion {
            get {
                return this.isWebVersionField;
            }
            set {
                this.isWebVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceInfo {
        
        private int serviceIDField;
        
        private string serviceNameField;
        
        private string shortDescriptionField;
        
        private string imageField;
        
        private int parentIDField;
        
        private int qtyField;
        
        private decimal priceField;
        
        private int durationField;
        
        private int serviceTypeIDField;
        
        private ServiceInfo[] childrenField;
        
        /// <remarks/>
        public int ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceTypeID {
            get {
                return this.serviceTypeIDField;
            }
            set {
                this.serviceTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public ServiceInfo[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NSR_User {
        
        private string usernameField;
        
        private int userIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string statusField;
        
        private string rejectionReasonField;
        
        private string notesField;
        
        private bool isApprovedField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string RejectionReason {
            get {
                return this.rejectionReasonField;
            }
            set {
                this.rejectionReasonField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FormUserQCategoryInfo {
        
        private int qCategoryIDField;
        
        private string qCategoryDescField;
        
        private bool visibilityField;
        
        private int stepIDField;
        
        private int userIDField;
        
        private string usernameField;
        
        private int orderIDField;
        
        private QuestionInfo[] questionsField;
        
        /// <remarks/>
        public int QCategoryID {
            get {
                return this.qCategoryIDField;
            }
            set {
                this.qCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string QCategoryDesc {
            get {
                return this.qCategoryDescField;
            }
            set {
                this.qCategoryDescField = value;
            }
        }
        
        /// <remarks/>
        public bool Visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        public int StepID {
            get {
                return this.stepIDField;
            }
            set {
                this.stepIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public QuestionInfo[] Questions {
            get {
                return this.questionsField;
            }
            set {
                this.questionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FormUserSteps {
        
        private string usernameField;
        
        private int stepIDField;
        
        private FormUserQCategoryInfo[] categoriesField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public int StepID {
            get {
                return this.stepIDField;
            }
            set {
                this.stepIDField = value;
            }
        }
        
        /// <remarks/>
        public FormUserQCategoryInfo[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListQuestionsCompletedEventHandler(object sender, ListQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Steps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Steps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserReponseCompletedEventHandler(object sender, GetUserReponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserReponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserReponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Steps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Steps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFormUserReponseCompletedEventHandler(object sender, GetFormUserReponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormUserReponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormUserReponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FormUserSteps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FormUserSteps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetStepQuestionsCompletedEventHandler(object sender, GetStepQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStepQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStepQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QCategoryInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QCategoryInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddCategoryCompletedEventHandler(object sender, AddCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetCategoryCompletedEventHandler(object sender, GetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QCategoryInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QCategoryInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateCategoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddQuestionCompletedEventHandler(object sender, AddQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetQuestionCompletedEventHandler(object sender, GetQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveQuestionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateQuestionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveOptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListOfUsersCompletedEventHandler(object sender, ListOfUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NSR_User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NSR_User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserStatusCompletedEventHandler(object sender, UpdateUserStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateActiveStatusCompletedEventHandler(object sender, UpdateActiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateActiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateActiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserNotesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserNotesCompletedEventHandler(object sender, GetUserNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddFormUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsFormUserValidatedCompletedEventHandler(object sender, IsFormUserValidatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsFormUserValidatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsFormUserValidatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RemoveResponseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SaveFormUserResponseCompletedEventHandler(object sender, SaveFormUserResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFormUserResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFormUserResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetFormUserServicesCompletedEventHandler(object sender, GetFormUserServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormUserServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormUserServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddUserHardwareCompletedEventHandler(object sender, AddUserHardwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateUserHardwareCompletedEventHandler(object sender, UpdateUserHardwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetUserHardwareCompletedEventHandler(object sender, GetUserHardwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NS_UserHardware[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NS_UserHardware[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ListUserHardwareCompletedEventHandler(object sender, ListUserHardwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUserHardwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUserHardwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NS_UserHardware[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NS_UserHardware[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591