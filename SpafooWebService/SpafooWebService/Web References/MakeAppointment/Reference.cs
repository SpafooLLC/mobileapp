//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SpafooWebService.MakeAppointment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="rhSoap", Namespace="http://tempuri.org/")]
    public partial class rh : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppSeenStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppBasicInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAppointmentByProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAppointmentByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAppointmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback HideApp4MeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProviderSlotFreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProviderSlotFreeEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProOccupiedSlotsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanSetAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DidIRatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthCardJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargePreviousAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargePreviousAuthJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundCardJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerPaymentProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerPaymentProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerPayProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerPayProfileJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppointmentPhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAppointmentPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAppointmentPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNotificationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public rh() {
            this.Url = global::SpafooWebService.Properties.Settings.Default.SpafooWebService_MakeAppointment_rh;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddAppointmentCompletedEventHandler AddAppointmentCompleted;
        
        /// <remarks/>
        public event AddAddressCompletedEventHandler AddAddressCompleted;
        
        /// <remarks/>
        public event GetAppLocationCompletedEventHandler GetAppLocationCompleted;
        
        /// <remarks/>
        public event UpdateAppStatusCompletedEventHandler UpdateAppStatusCompleted;
        
        /// <remarks/>
        public event UpdateAppSeenStatusCompletedEventHandler UpdateAppSeenStatusCompleted;
        
        /// <remarks/>
        public event MakeAppointmentCompletedEventHandler MakeAppointmentCompleted;
        
        /// <remarks/>
        public event UpdateAppBasicInfoCompletedEventHandler UpdateAppBasicInfoCompleted;
        
        /// <remarks/>
        public event GetAppointmentCompletedEventHandler GetAppointmentCompleted;
        
        /// <remarks/>
        public event ListAppointmentByProviderCompletedEventHandler ListAppointmentByProviderCompleted;
        
        /// <remarks/>
        public event ListAppointmentByClientCompletedEventHandler ListAppointmentByClientCompleted;
        
        /// <remarks/>
        public event UpdateAppointmentCompletedEventHandler UpdateAppointmentCompleted;
        
        /// <remarks/>
        public event RemoveAppCompletedEventHandler RemoveAppCompleted;
        
        /// <remarks/>
        public event HideApp4MeCompletedEventHandler HideApp4MeCompleted;
        
        /// <remarks/>
        public event IsProviderSlotFreeCompletedEventHandler IsProviderSlotFreeCompleted;
        
        /// <remarks/>
        public event IsProviderSlotFreeEMCompletedEventHandler IsProviderSlotFreeEMCompleted;
        
        /// <remarks/>
        public event GetProOccupiedSlotsCompletedEventHandler GetProOccupiedSlotsCompleted;
        
        /// <remarks/>
        public event CanSetAvailabilityCompletedEventHandler CanSetAvailabilityCompleted;
        
        /// <remarks/>
        public event AddRatingCompletedEventHandler AddRatingCompleted;
        
        /// <remarks/>
        public event DidIRatedCompletedEventHandler DidIRatedCompleted;
        
        /// <remarks/>
        public event ListRatingCompletedEventHandler ListRatingCompleted;
        
        /// <remarks/>
        public event ChargeCardCompletedEventHandler ChargeCardCompleted;
        
        /// <remarks/>
        public event AuthCardCompletedEventHandler AuthCardCompleted;
        
        /// <remarks/>
        public event AuthCardJSONCompletedEventHandler AuthCardJSONCompleted;
        
        /// <remarks/>
        public event ChargeProfileCompletedEventHandler ChargeProfileCompleted;
        
        /// <remarks/>
        public event ChargeProfileJSONCompletedEventHandler ChargeProfileJSONCompleted;
        
        /// <remarks/>
        public event AuthProfileCompletedEventHandler AuthProfileCompleted;
        
        /// <remarks/>
        public event AuthProfileJSONCompletedEventHandler AuthProfileJSONCompleted;
        
        /// <remarks/>
        public event ChargePreviousAuthCompletedEventHandler ChargePreviousAuthCompleted;
        
        /// <remarks/>
        public event ChargePreviousAuthJSONCompletedEventHandler ChargePreviousAuthJSONCompleted;
        
        /// <remarks/>
        public event RefundCardCompletedEventHandler RefundCardCompleted;
        
        /// <remarks/>
        public event RefundCardJSONCompletedEventHandler RefundCardJSONCompleted;
        
        /// <remarks/>
        public event CreateCustomerProfileCompletedEventHandler CreateCustomerProfileCompleted;
        
        /// <remarks/>
        public event CreateCustomerProfileJSONCompletedEventHandler CreateCustomerProfileJSONCompleted;
        
        /// <remarks/>
        public event CreateCustomerPaymentProfileCompletedEventHandler CreateCustomerPaymentProfileCompleted;
        
        /// <remarks/>
        public event CreateCustomerPaymentProfileJSONCompletedEventHandler CreateCustomerPaymentProfileJSONCompleted;
        
        /// <remarks/>
        public event GetCustomerProfileCompletedEventHandler GetCustomerProfileCompleted;
        
        /// <remarks/>
        public event GetCustomerProfileJSONCompletedEventHandler GetCustomerProfileJSONCompleted;
        
        /// <remarks/>
        public event DeleteCustomerPayProfileCompletedEventHandler DeleteCustomerPayProfileCompleted;
        
        /// <remarks/>
        public event DeleteCustomerPayProfileJSONCompletedEventHandler DeleteCustomerPayProfileJSONCompleted;
        
        /// <remarks/>
        public event GetAppointmentPhotosCompletedEventHandler GetAppointmentPhotosCompleted;
        
        /// <remarks/>
        public event AddAppointmentPhotoCompletedEventHandler AddAppointmentPhotoCompleted;
        
        /// <remarks/>
        public event RemoveAppointmentPhotoCompletedEventHandler RemoveAppointmentPhotoCompleted;
        
        /// <remarks/>
        public event AddNotificationCompletedEventHandler AddNotificationCompleted;
        
        /// <remarks/>
        public event RemoveNotificationCompletedEventHandler RemoveNotificationCompleted;
        
        /// <remarks/>
        public event RemoveUserNotificationCompletedEventHandler RemoveUserNotificationCompleted;
        
        /// <remarks/>
        public event GetMyNotificationCompletedEventHandler GetMyNotificationCompleted;
        
        /// <remarks/>
        public event GetUserNotificationCompletedEventHandler GetUserNotificationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAppointment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAppointment(int SID, string SN, string SD, string Image, int PID, decimal Price, decimal Tax) {
            object[] results = this.Invoke("AddAppointment", new object[] {
                        SID,
                        SN,
                        SD,
                        Image,
                        PID,
                        Price,
                        Tax});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAppointmentAsync(int SID, string SN, string SD, string Image, int PID, decimal Price, decimal Tax) {
            this.AddAppointmentAsync(SID, SN, SD, Image, PID, Price, Tax, null);
        }
        
        /// <remarks/>
        public void AddAppointmentAsync(int SID, string SN, string SD, string Image, int PID, decimal Price, decimal Tax, object userState) {
            if ((this.AddAppointmentOperationCompleted == null)) {
                this.AddAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAppointmentOperationCompleted);
            }
            this.InvokeAsync("AddAppointment", new object[] {
                        SID,
                        SN,
                        SD,
                        Image,
                        PID,
                        Price,
                        Tax}, this.AddAppointmentOperationCompleted, userState);
        }
        
        private void OnAddAppointmentOperationCompleted(object arg) {
            if ((this.AddAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAppointmentCompleted(this, new AddAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAddress(string street, string city, string state, string zip) {
            object[] results = this.Invoke("AddAddress", new object[] {
                        street,
                        city,
                        state,
                        zip});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAddressAsync(string street, string city, string state, string zip) {
            this.AddAddressAsync(street, city, state, zip, null);
        }
        
        /// <remarks/>
        public void AddAddressAsync(string street, string city, string state, string zip, object userState) {
            if ((this.AddAddressOperationCompleted == null)) {
                this.AddAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAddressOperationCompleted);
            }
            this.InvokeAsync("AddAddress", new object[] {
                        street,
                        city,
                        state,
                        zip}, this.AddAddressOperationCompleted, userState);
        }
        
        private void OnAddAddressOperationCompleted(object arg) {
            if ((this.AddAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAddressCompleted(this, new AddAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClientLocation GetAppLocation(int AppID) {
            object[] results = this.Invoke("GetAppLocation", new object[] {
                        AppID});
            return ((ClientLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppLocationAsync(int AppID) {
            this.GetAppLocationAsync(AppID, null);
        }
        
        /// <remarks/>
        public void GetAppLocationAsync(int AppID, object userState) {
            if ((this.GetAppLocationOperationCompleted == null)) {
                this.GetAppLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppLocationOperationCompleted);
            }
            this.InvokeAsync("GetAppLocation", new object[] {
                        AppID}, this.GetAppLocationOperationCompleted, userState);
        }
        
        private void OnGetAppLocationOperationCompleted(object arg) {
            if ((this.GetAppLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppLocationCompleted(this, new GetAppLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAppStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAppStatus(int AppID, int Status) {
            this.Invoke("UpdateAppStatus", new object[] {
                        AppID,
                        Status});
        }
        
        /// <remarks/>
        public void UpdateAppStatusAsync(int AppID, int Status) {
            this.UpdateAppStatusAsync(AppID, Status, null);
        }
        
        /// <remarks/>
        public void UpdateAppStatusAsync(int AppID, int Status, object userState) {
            if ((this.UpdateAppStatusOperationCompleted == null)) {
                this.UpdateAppStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAppStatus", new object[] {
                        AppID,
                        Status}, this.UpdateAppStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAppStatusOperationCompleted(object arg) {
            if ((this.UpdateAppStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAppSeenStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAppSeenStatus(int AppID) {
            this.Invoke("UpdateAppSeenStatus", new object[] {
                        AppID});
        }
        
        /// <remarks/>
        public void UpdateAppSeenStatusAsync(int AppID) {
            this.UpdateAppSeenStatusAsync(AppID, null);
        }
        
        /// <remarks/>
        public void UpdateAppSeenStatusAsync(int AppID, object userState) {
            if ((this.UpdateAppSeenStatusOperationCompleted == null)) {
                this.UpdateAppSeenStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppSeenStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateAppSeenStatus", new object[] {
                        AppID}, this.UpdateAppSeenStatusOperationCompleted, userState);
        }
        
        private void OnUpdateAppSeenStatusOperationCompleted(object arg) {
            if ((this.UpdateAppSeenStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppSeenStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MakeAppointment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MakeAppointment(int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string CSVSRVC, string PayTxnID, string CCNumber, string Expriry, string Comment, string PayProfileID, int EditAppID) {
            object[] results = this.Invoke("MakeAppointment", new object[] {
                        ClientID,
                        ProviderID,
                        AddressID,
                        ForDate,
                        AtTime,
                        EndTime,
                        CSVSRVC,
                        PayTxnID,
                        CCNumber,
                        Expriry,
                        Comment,
                        PayProfileID,
                        EditAppID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MakeAppointmentAsync(int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string CSVSRVC, string PayTxnID, string CCNumber, string Expriry, string Comment, string PayProfileID, int EditAppID) {
            this.MakeAppointmentAsync(ClientID, ProviderID, AddressID, ForDate, AtTime, EndTime, CSVSRVC, PayTxnID, CCNumber, Expriry, Comment, PayProfileID, EditAppID, null);
        }
        
        /// <remarks/>
        public void MakeAppointmentAsync(int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string CSVSRVC, string PayTxnID, string CCNumber, string Expriry, string Comment, string PayProfileID, int EditAppID, object userState) {
            if ((this.MakeAppointmentOperationCompleted == null)) {
                this.MakeAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeAppointmentOperationCompleted);
            }
            this.InvokeAsync("MakeAppointment", new object[] {
                        ClientID,
                        ProviderID,
                        AddressID,
                        ForDate,
                        AtTime,
                        EndTime,
                        CSVSRVC,
                        PayTxnID,
                        CCNumber,
                        Expriry,
                        Comment,
                        PayProfileID,
                        EditAppID}, this.MakeAppointmentOperationCompleted, userState);
        }
        
        private void OnMakeAppointmentOperationCompleted(object arg) {
            if ((this.MakeAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeAppointmentCompleted(this, new MakeAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAppBasicInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAppBasicInfo(int AppID, int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string Comment) {
            object[] results = this.Invoke("UpdateAppBasicInfo", new object[] {
                        AppID,
                        ClientID,
                        ProviderID,
                        AddressID,
                        ForDate,
                        AtTime,
                        EndTime,
                        Comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAppBasicInfoAsync(int AppID, int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string Comment) {
            this.UpdateAppBasicInfoAsync(AppID, ClientID, ProviderID, AddressID, ForDate, AtTime, EndTime, Comment, null);
        }
        
        /// <remarks/>
        public void UpdateAppBasicInfoAsync(int AppID, int ClientID, int ProviderID, int AddressID, string ForDate, string AtTime, string EndTime, string Comment, object userState) {
            if ((this.UpdateAppBasicInfoOperationCompleted == null)) {
                this.UpdateAppBasicInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppBasicInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateAppBasicInfo", new object[] {
                        AppID,
                        ClientID,
                        ProviderID,
                        AddressID,
                        ForDate,
                        AtTime,
                        EndTime,
                        Comment}, this.UpdateAppBasicInfoOperationCompleted, userState);
        }
        
        private void OnUpdateAppBasicInfoOperationCompleted(object arg) {
            if ((this.UpdateAppBasicInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppBasicInfoCompleted(this, new UpdateAppBasicInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppointment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentInfo GetAppointment(int ID) {
            object[] results = this.Invoke("GetAppointment", new object[] {
                        ID});
            return ((AppointmentInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppointmentAsync(int ID) {
            this.GetAppointmentAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetAppointmentAsync(int ID, object userState) {
            if ((this.GetAppointmentOperationCompleted == null)) {
                this.GetAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppointmentOperationCompleted);
            }
            this.InvokeAsync("GetAppointment", new object[] {
                        ID}, this.GetAppointmentOperationCompleted, userState);
        }
        
        private void OnGetAppointmentOperationCompleted(object arg) {
            if ((this.GetAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppointmentCompleted(this, new GetAppointmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAppointmentByProvider", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentInfo[] ListAppointmentByProvider(int UID) {
            object[] results = this.Invoke("ListAppointmentByProvider", new object[] {
                        UID});
            return ((AppointmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAppointmentByProviderAsync(int UID) {
            this.ListAppointmentByProviderAsync(UID, null);
        }
        
        /// <remarks/>
        public void ListAppointmentByProviderAsync(int UID, object userState) {
            if ((this.ListAppointmentByProviderOperationCompleted == null)) {
                this.ListAppointmentByProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAppointmentByProviderOperationCompleted);
            }
            this.InvokeAsync("ListAppointmentByProvider", new object[] {
                        UID}, this.ListAppointmentByProviderOperationCompleted, userState);
        }
        
        private void OnListAppointmentByProviderOperationCompleted(object arg) {
            if ((this.ListAppointmentByProviderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAppointmentByProviderCompleted(this, new ListAppointmentByProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListAppointmentByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentInfo[] ListAppointmentByClient(int UID) {
            object[] results = this.Invoke("ListAppointmentByClient", new object[] {
                        UID});
            return ((AppointmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAppointmentByClientAsync(int UID) {
            this.ListAppointmentByClientAsync(UID, null);
        }
        
        /// <remarks/>
        public void ListAppointmentByClientAsync(int UID, object userState) {
            if ((this.ListAppointmentByClientOperationCompleted == null)) {
                this.ListAppointmentByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAppointmentByClientOperationCompleted);
            }
            this.InvokeAsync("ListAppointmentByClient", new object[] {
                        UID}, this.ListAppointmentByClientOperationCompleted, userState);
        }
        
        private void OnListAppointmentByClientOperationCompleted(object arg) {
            if ((this.ListAppointmentByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAppointmentByClientCompleted(this, new ListAppointmentByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAppointment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAppointment(int ID, string C, string PaymentTxnID) {
            this.Invoke("UpdateAppointment", new object[] {
                        ID,
                        C,
                        PaymentTxnID});
        }
        
        /// <remarks/>
        public void UpdateAppointmentAsync(int ID, string C, string PaymentTxnID) {
            this.UpdateAppointmentAsync(ID, C, PaymentTxnID, null);
        }
        
        /// <remarks/>
        public void UpdateAppointmentAsync(int ID, string C, string PaymentTxnID, object userState) {
            if ((this.UpdateAppointmentOperationCompleted == null)) {
                this.UpdateAppointmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAppointmentOperationCompleted);
            }
            this.InvokeAsync("UpdateAppointment", new object[] {
                        ID,
                        C,
                        PaymentTxnID}, this.UpdateAppointmentOperationCompleted, userState);
        }
        
        private void OnUpdateAppointmentOperationCompleted(object arg) {
            if ((this.UpdateAppointmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAppointmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveApp(int ID) {
            this.Invoke("RemoveApp", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void RemoveAppAsync(int ID) {
            this.RemoveAppAsync(ID, null);
        }
        
        /// <remarks/>
        public void RemoveAppAsync(int ID, object userState) {
            if ((this.RemoveAppOperationCompleted == null)) {
                this.RemoveAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAppOperationCompleted);
            }
            this.InvokeAsync("RemoveApp", new object[] {
                        ID}, this.RemoveAppOperationCompleted, userState);
        }
        
        private void OnRemoveAppOperationCompleted(object arg) {
            if ((this.RemoveAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAppCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HideApp4Me", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HideApp4Me(int AID, string UserType) {
            this.Invoke("HideApp4Me", new object[] {
                        AID,
                        UserType});
        }
        
        /// <remarks/>
        public void HideApp4MeAsync(int AID, string UserType) {
            this.HideApp4MeAsync(AID, UserType, null);
        }
        
        /// <remarks/>
        public void HideApp4MeAsync(int AID, string UserType, object userState) {
            if ((this.HideApp4MeOperationCompleted == null)) {
                this.HideApp4MeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHideApp4MeOperationCompleted);
            }
            this.InvokeAsync("HideApp4Me", new object[] {
                        AID,
                        UserType}, this.HideApp4MeOperationCompleted, userState);
        }
        
        private void OnHideApp4MeOperationCompleted(object arg) {
            if ((this.HideApp4MeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HideApp4MeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsProviderSlotFree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsProviderSlotFree(int ProID, string StartDateTime, string EndDateTime) {
            object[] results = this.Invoke("IsProviderSlotFree", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsProviderSlotFreeAsync(int ProID, string StartDateTime, string EndDateTime) {
            this.IsProviderSlotFreeAsync(ProID, StartDateTime, EndDateTime, null);
        }
        
        /// <remarks/>
        public void IsProviderSlotFreeAsync(int ProID, string StartDateTime, string EndDateTime, object userState) {
            if ((this.IsProviderSlotFreeOperationCompleted == null)) {
                this.IsProviderSlotFreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProviderSlotFreeOperationCompleted);
            }
            this.InvokeAsync("IsProviderSlotFree", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime}, this.IsProviderSlotFreeOperationCompleted, userState);
        }
        
        private void OnIsProviderSlotFreeOperationCompleted(object arg) {
            if ((this.IsProviderSlotFreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProviderSlotFreeCompleted(this, new IsProviderSlotFreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsProviderSlotFreeEM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsProviderSlotFreeEM(int ProID, string StartDateTime, string EndDateTime, int AppID) {
            object[] results = this.Invoke("IsProviderSlotFreeEM", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime,
                        AppID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsProviderSlotFreeEMAsync(int ProID, string StartDateTime, string EndDateTime, int AppID) {
            this.IsProviderSlotFreeEMAsync(ProID, StartDateTime, EndDateTime, AppID, null);
        }
        
        /// <remarks/>
        public void IsProviderSlotFreeEMAsync(int ProID, string StartDateTime, string EndDateTime, int AppID, object userState) {
            if ((this.IsProviderSlotFreeEMOperationCompleted == null)) {
                this.IsProviderSlotFreeEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProviderSlotFreeEMOperationCompleted);
            }
            this.InvokeAsync("IsProviderSlotFreeEM", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime,
                        AppID}, this.IsProviderSlotFreeEMOperationCompleted, userState);
        }
        
        private void OnIsProviderSlotFreeEMOperationCompleted(object arg) {
            if ((this.IsProviderSlotFreeEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProviderSlotFreeEMCompleted(this, new IsProviderSlotFreeEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProOccupiedSlots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentInfo[] GetProOccupiedSlots(int a, string b, string c) {
            object[] results = this.Invoke("GetProOccupiedSlots", new object[] {
                        a,
                        b,
                        c});
            return ((AppointmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProOccupiedSlotsAsync(int a, string b, string c) {
            this.GetProOccupiedSlotsAsync(a, b, c, null);
        }
        
        /// <remarks/>
        public void GetProOccupiedSlotsAsync(int a, string b, string c, object userState) {
            if ((this.GetProOccupiedSlotsOperationCompleted == null)) {
                this.GetProOccupiedSlotsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProOccupiedSlotsOperationCompleted);
            }
            this.InvokeAsync("GetProOccupiedSlots", new object[] {
                        a,
                        b,
                        c}, this.GetProOccupiedSlotsOperationCompleted, userState);
        }
        
        private void OnGetProOccupiedSlotsOperationCompleted(object arg) {
            if ((this.GetProOccupiedSlotsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProOccupiedSlotsCompleted(this, new GetProOccupiedSlotsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanSetAvailability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanSetAvailability(int ProID, string StartDateTime, string EndDateTime) {
            object[] results = this.Invoke("CanSetAvailability", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanSetAvailabilityAsync(int ProID, string StartDateTime, string EndDateTime) {
            this.CanSetAvailabilityAsync(ProID, StartDateTime, EndDateTime, null);
        }
        
        /// <remarks/>
        public void CanSetAvailabilityAsync(int ProID, string StartDateTime, string EndDateTime, object userState) {
            if ((this.CanSetAvailabilityOperationCompleted == null)) {
                this.CanSetAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanSetAvailabilityOperationCompleted);
            }
            this.InvokeAsync("CanSetAvailability", new object[] {
                        ProID,
                        StartDateTime,
                        EndDateTime}, this.CanSetAvailabilityOperationCompleted, userState);
        }
        
        private void OnCanSetAvailabilityOperationCompleted(object arg) {
            if ((this.CanSetAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanSetAvailabilityCompleted(this, new CanSetAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRating(int RatingByID, int RatingToID, string RatingCSV, string ReviewCSV, int AppID) {
            this.Invoke("AddRating", new object[] {
                        RatingByID,
                        RatingToID,
                        RatingCSV,
                        ReviewCSV,
                        AppID});
        }
        
        /// <remarks/>
        public void AddRatingAsync(int RatingByID, int RatingToID, string RatingCSV, string ReviewCSV, int AppID) {
            this.AddRatingAsync(RatingByID, RatingToID, RatingCSV, ReviewCSV, AppID, null);
        }
        
        /// <remarks/>
        public void AddRatingAsync(int RatingByID, int RatingToID, string RatingCSV, string ReviewCSV, int AppID, object userState) {
            if ((this.AddRatingOperationCompleted == null)) {
                this.AddRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRatingOperationCompleted);
            }
            this.InvokeAsync("AddRating", new object[] {
                        RatingByID,
                        RatingToID,
                        RatingCSV,
                        ReviewCSV,
                        AppID}, this.AddRatingOperationCompleted, userState);
        }
        
        private void OnAddRatingOperationCompleted(object arg) {
            if ((this.AddRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRatingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DidIRated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DidIRated(int ByUserID, int AppID) {
            object[] results = this.Invoke("DidIRated", new object[] {
                        ByUserID,
                        AppID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DidIRatedAsync(int ByUserID, int AppID) {
            this.DidIRatedAsync(ByUserID, AppID, null);
        }
        
        /// <remarks/>
        public void DidIRatedAsync(int ByUserID, int AppID, object userState) {
            if ((this.DidIRatedOperationCompleted == null)) {
                this.DidIRatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDidIRatedOperationCompleted);
            }
            this.InvokeAsync("DidIRated", new object[] {
                        ByUserID,
                        AppID}, this.DidIRatedOperationCompleted, userState);
        }
        
        private void OnDidIRatedOperationCompleted(object arg) {
            if ((this.DidIRatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DidIRatedCompleted(this, new DidIRatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRating", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RatingInfo[] ListRating(int RatingTypeID) {
            object[] results = this.Invoke("ListRating", new object[] {
                        RatingTypeID});
            return ((RatingInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRatingAsync(int RatingTypeID) {
            this.ListRatingAsync(RatingTypeID, null);
        }
        
        /// <remarks/>
        public void ListRatingAsync(int RatingTypeID, object userState) {
            if ((this.ListRatingOperationCompleted == null)) {
                this.ListRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRatingOperationCompleted);
            }
            this.InvokeAsync("ListRating", new object[] {
                        RatingTypeID}, this.ListRatingOperationCompleted, userState);
        }
        
        private void OnListRatingOperationCompleted(object arg) {
            if ((this.ListRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRatingCompleted(this, new ListRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse ChargeCard(string CCNumber, string Expiry, string CardCode, decimal amount) {
            object[] results = this.Invoke("ChargeCard", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeCardAsync(string CCNumber, string Expiry, string CardCode, decimal amount) {
            this.ChargeCardAsync(CCNumber, Expiry, CardCode, amount, null);
        }
        
        /// <remarks/>
        public void ChargeCardAsync(string CCNumber, string Expiry, string CardCode, decimal amount, object userState) {
            if ((this.ChargeCardOperationCompleted == null)) {
                this.ChargeCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeCardOperationCompleted);
            }
            this.InvokeAsync("ChargeCard", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount}, this.ChargeCardOperationCompleted, userState);
        }
        
        private void OnChargeCardOperationCompleted(object arg) {
            if ((this.ChargeCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeCardCompleted(this, new ChargeCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse AuthCard(string CCNumber, string Expiry, string CardCode, decimal amount) {
            object[] results = this.Invoke("AuthCard", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthCardAsync(string CCNumber, string Expiry, string CardCode, decimal amount) {
            this.AuthCardAsync(CCNumber, Expiry, CardCode, amount, null);
        }
        
        /// <remarks/>
        public void AuthCardAsync(string CCNumber, string Expiry, string CardCode, decimal amount, object userState) {
            if ((this.AuthCardOperationCompleted == null)) {
                this.AuthCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthCardOperationCompleted);
            }
            this.InvokeAsync("AuthCard", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount}, this.AuthCardOperationCompleted, userState);
        }
        
        private void OnAuthCardOperationCompleted(object arg) {
            if ((this.AuthCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthCardCompleted(this, new AuthCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthCardJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthCardJSON(string CCNumber, string Expiry, string CardCode, decimal amount) {
            object[] results = this.Invoke("AuthCardJSON", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthCardJSONAsync(string CCNumber, string Expiry, string CardCode, decimal amount) {
            this.AuthCardJSONAsync(CCNumber, Expiry, CardCode, amount, null);
        }
        
        /// <remarks/>
        public void AuthCardJSONAsync(string CCNumber, string Expiry, string CardCode, decimal amount, object userState) {
            if ((this.AuthCardJSONOperationCompleted == null)) {
                this.AuthCardJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthCardJSONOperationCompleted);
            }
            this.InvokeAsync("AuthCardJSON", new object[] {
                        CCNumber,
                        Expiry,
                        CardCode,
                        amount}, this.AuthCardJSONOperationCompleted, userState);
        }
        
        private void OnAuthCardJSONOperationCompleted(object arg) {
            if ((this.AuthCardJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthCardJSONCompleted(this, new AuthCardJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse ChargeProfile(string PID, string PPID, decimal amount) {
            object[] results = this.Invoke("ChargeProfile", new object[] {
                        PID,
                        PPID,
                        amount});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeProfileAsync(string PID, string PPID, decimal amount) {
            this.ChargeProfileAsync(PID, PPID, amount, null);
        }
        
        /// <remarks/>
        public void ChargeProfileAsync(string PID, string PPID, decimal amount, object userState) {
            if ((this.ChargeProfileOperationCompleted == null)) {
                this.ChargeProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeProfileOperationCompleted);
            }
            this.InvokeAsync("ChargeProfile", new object[] {
                        PID,
                        PPID,
                        amount}, this.ChargeProfileOperationCompleted, userState);
        }
        
        private void OnChargeProfileOperationCompleted(object arg) {
            if ((this.ChargeProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeProfileCompleted(this, new ChargeProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargeProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChargeProfileJSON(string PID, string PPID, decimal amount) {
            object[] results = this.Invoke("ChargeProfileJSON", new object[] {
                        PID,
                        PPID,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChargeProfileJSONAsync(string PID, string PPID, decimal amount) {
            this.ChargeProfileJSONAsync(PID, PPID, amount, null);
        }
        
        /// <remarks/>
        public void ChargeProfileJSONAsync(string PID, string PPID, decimal amount, object userState) {
            if ((this.ChargeProfileJSONOperationCompleted == null)) {
                this.ChargeProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeProfileJSONOperationCompleted);
            }
            this.InvokeAsync("ChargeProfileJSON", new object[] {
                        PID,
                        PPID,
                        amount}, this.ChargeProfileJSONOperationCompleted, userState);
        }
        
        private void OnChargeProfileJSONOperationCompleted(object arg) {
            if ((this.ChargeProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeProfileJSONCompleted(this, new ChargeProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse AuthProfile(string PID, string PPID, decimal amount) {
            object[] results = this.Invoke("AuthProfile", new object[] {
                        PID,
                        PPID,
                        amount});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthProfileAsync(string PID, string PPID, decimal amount) {
            this.AuthProfileAsync(PID, PPID, amount, null);
        }
        
        /// <remarks/>
        public void AuthProfileAsync(string PID, string PPID, decimal amount, object userState) {
            if ((this.AuthProfileOperationCompleted == null)) {
                this.AuthProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthProfileOperationCompleted);
            }
            this.InvokeAsync("AuthProfile", new object[] {
                        PID,
                        PPID,
                        amount}, this.AuthProfileOperationCompleted, userState);
        }
        
        private void OnAuthProfileOperationCompleted(object arg) {
            if ((this.AuthProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthProfileCompleted(this, new AuthProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthProfileJSON(string PID, string PPID, decimal amount) {
            object[] results = this.Invoke("AuthProfileJSON", new object[] {
                        PID,
                        PPID,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthProfileJSONAsync(string PID, string PPID, decimal amount) {
            this.AuthProfileJSONAsync(PID, PPID, amount, null);
        }
        
        /// <remarks/>
        public void AuthProfileJSONAsync(string PID, string PPID, decimal amount, object userState) {
            if ((this.AuthProfileJSONOperationCompleted == null)) {
                this.AuthProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthProfileJSONOperationCompleted);
            }
            this.InvokeAsync("AuthProfileJSON", new object[] {
                        PID,
                        PPID,
                        amount}, this.AuthProfileJSONOperationCompleted, userState);
        }
        
        private void OnAuthProfileJSONOperationCompleted(object arg) {
            if ((this.AuthProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthProfileJSONCompleted(this, new AuthProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargePreviousAuth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse ChargePreviousAuth(string Txn, decimal amount) {
            object[] results = this.Invoke("ChargePreviousAuth", new object[] {
                        Txn,
                        amount});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChargePreviousAuthAsync(string Txn, decimal amount) {
            this.ChargePreviousAuthAsync(Txn, amount, null);
        }
        
        /// <remarks/>
        public void ChargePreviousAuthAsync(string Txn, decimal amount, object userState) {
            if ((this.ChargePreviousAuthOperationCompleted == null)) {
                this.ChargePreviousAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargePreviousAuthOperationCompleted);
            }
            this.InvokeAsync("ChargePreviousAuth", new object[] {
                        Txn,
                        amount}, this.ChargePreviousAuthOperationCompleted, userState);
        }
        
        private void OnChargePreviousAuthOperationCompleted(object arg) {
            if ((this.ChargePreviousAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargePreviousAuthCompleted(this, new ChargePreviousAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChargePreviousAuthJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChargePreviousAuthJSON(string Txn, decimal amount) {
            object[] results = this.Invoke("ChargePreviousAuthJSON", new object[] {
                        Txn,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChargePreviousAuthJSONAsync(string Txn, decimal amount) {
            this.ChargePreviousAuthJSONAsync(Txn, amount, null);
        }
        
        /// <remarks/>
        public void ChargePreviousAuthJSONAsync(string Txn, decimal amount, object userState) {
            if ((this.ChargePreviousAuthJSONOperationCompleted == null)) {
                this.ChargePreviousAuthJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargePreviousAuthJSONOperationCompleted);
            }
            this.InvokeAsync("ChargePreviousAuthJSON", new object[] {
                        Txn,
                        amount}, this.ChargePreviousAuthJSONOperationCompleted, userState);
        }
        
        private void OnChargePreviousAuthJSONOperationCompleted(object arg) {
            if ((this.ChargePreviousAuthJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargePreviousAuthJSONCompleted(this, new ChargePreviousAuthJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse RefundCard(int AID) {
            object[] results = this.Invoke("RefundCard", new object[] {
                        AID});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefundCardAsync(int AID) {
            this.RefundCardAsync(AID, null);
        }
        
        /// <remarks/>
        public void RefundCardAsync(int AID, object userState) {
            if ((this.RefundCardOperationCompleted == null)) {
                this.RefundCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundCardOperationCompleted);
            }
            this.InvokeAsync("RefundCard", new object[] {
                        AID}, this.RefundCardOperationCompleted, userState);
        }
        
        private void OnRefundCardOperationCompleted(object arg) {
            if ((this.RefundCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCardCompleted(this, new RefundCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundCardJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefundCardJSON(int AID) {
            object[] results = this.Invoke("RefundCardJSON", new object[] {
                        AID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefundCardJSONAsync(int AID) {
            this.RefundCardJSONAsync(AID, null);
        }
        
        /// <remarks/>
        public void RefundCardJSONAsync(int AID, object userState) {
            if ((this.RefundCardJSONOperationCompleted == null)) {
                this.RefundCardJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundCardJSONOperationCompleted);
            }
            this.InvokeAsync("RefundCardJSON", new object[] {
                        AID}, this.RefundCardJSONOperationCompleted, userState);
        }
        
        private void OnRefundCardJSONOperationCompleted(object arg) {
            if ((this.RefundCardJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundCardJSONCompleted(this, new RefundCardJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCustomerProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public CreateCustomerProfileResult CreateCustomerProfile(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone) {
            object[] results = this.Invoke("CreateCustomerProfile", new object[] {
                        UID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        Email,
                        adrs,
                        city,
                        state,
                        zip,
                        phone});
            return ((CreateCustomerProfileResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerProfileAsync(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone) {
            this.CreateCustomerProfileAsync(UID, name, CCNumber, Expiry, CVV, Email, adrs, city, state, zip, phone, null);
        }
        
        /// <remarks/>
        public void CreateCustomerProfileAsync(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone, object userState) {
            if ((this.CreateCustomerProfileOperationCompleted == null)) {
                this.CreateCustomerProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerProfileOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerProfile", new object[] {
                        UID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        Email,
                        adrs,
                        city,
                        state,
                        zip,
                        phone}, this.CreateCustomerProfileOperationCompleted, userState);
        }
        
        private void OnCreateCustomerProfileOperationCompleted(object arg) {
            if ((this.CreateCustomerProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerProfileCompleted(this, new CreateCustomerProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCustomerProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomerProfileJSON(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone) {
            object[] results = this.Invoke("CreateCustomerProfileJSON", new object[] {
                        UID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        Email,
                        adrs,
                        city,
                        state,
                        zip,
                        phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerProfileJSONAsync(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone) {
            this.CreateCustomerProfileJSONAsync(UID, name, CCNumber, Expiry, CVV, Email, adrs, city, state, zip, phone, null);
        }
        
        /// <remarks/>
        public void CreateCustomerProfileJSONAsync(int UID, string name, string CCNumber, string Expiry, string CVV, string Email, string adrs, string city, string state, string zip, string phone, object userState) {
            if ((this.CreateCustomerProfileJSONOperationCompleted == null)) {
                this.CreateCustomerProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerProfileJSONOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerProfileJSON", new object[] {
                        UID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        Email,
                        adrs,
                        city,
                        state,
                        zip,
                        phone}, this.CreateCustomerProfileJSONOperationCompleted, userState);
        }
        
        private void OnCreateCustomerProfileJSONOperationCompleted(object arg) {
            if ((this.CreateCustomerProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerProfileJSONCompleted(this, new CreateCustomerProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCustomerPaymentProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public CreateCustomerPaymentProfileResult CreateCustomerPaymentProfile(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone, int UID) {
            object[] results = this.Invoke("CreateCustomerPaymentProfile", new object[] {
                        PID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        adrs,
                        city,
                        state,
                        zip,
                        phone,
                        UID});
            return ((CreateCustomerPaymentProfileResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerPaymentProfileAsync(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone, int UID) {
            this.CreateCustomerPaymentProfileAsync(PID, name, CCNumber, Expiry, CVV, adrs, city, state, zip, phone, UID, null);
        }
        
        /// <remarks/>
        public void CreateCustomerPaymentProfileAsync(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone, int UID, object userState) {
            if ((this.CreateCustomerPaymentProfileOperationCompleted == null)) {
                this.CreateCustomerPaymentProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerPaymentProfileOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerPaymentProfile", new object[] {
                        PID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        adrs,
                        city,
                        state,
                        zip,
                        phone,
                        UID}, this.CreateCustomerPaymentProfileOperationCompleted, userState);
        }
        
        private void OnCreateCustomerPaymentProfileOperationCompleted(object arg) {
            if ((this.CreateCustomerPaymentProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerPaymentProfileCompleted(this, new CreateCustomerPaymentProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCustomerPaymentProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomerPaymentProfileJSON(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone) {
            object[] results = this.Invoke("CreateCustomerPaymentProfileJSON", new object[] {
                        PID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        adrs,
                        city,
                        state,
                        zip,
                        phone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerPaymentProfileJSONAsync(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone) {
            this.CreateCustomerPaymentProfileJSONAsync(PID, name, CCNumber, Expiry, CVV, adrs, city, state, zip, phone, null);
        }
        
        /// <remarks/>
        public void CreateCustomerPaymentProfileJSONAsync(string PID, string name, string CCNumber, string Expiry, string CVV, string adrs, string city, string state, string zip, string phone, object userState) {
            if ((this.CreateCustomerPaymentProfileJSONOperationCompleted == null)) {
                this.CreateCustomerPaymentProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerPaymentProfileJSONOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerPaymentProfileJSON", new object[] {
                        PID,
                        name,
                        CCNumber,
                        Expiry,
                        CVV,
                        adrs,
                        city,
                        state,
                        zip,
                        phone}, this.CreateCustomerPaymentProfileJSONOperationCompleted, userState);
        }
        
        private void OnCreateCustomerPaymentProfileJSONOperationCompleted(object arg) {
            if ((this.CreateCustomerPaymentProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerPaymentProfileJSONCompleted(this, new CreateCustomerPaymentProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse GetCustomerProfile(int UID) {
            object[] results = this.Invoke("GetCustomerProfile", new object[] {
                        UID});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerProfileAsync(int UID) {
            this.GetCustomerProfileAsync(UID, null);
        }
        
        /// <remarks/>
        public void GetCustomerProfileAsync(int UID, object userState) {
            if ((this.GetCustomerProfileOperationCompleted == null)) {
                this.GetCustomerProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerProfileOperationCompleted);
            }
            this.InvokeAsync("GetCustomerProfile", new object[] {
                        UID}, this.GetCustomerProfileOperationCompleted, userState);
        }
        
        private void OnGetCustomerProfileOperationCompleted(object arg) {
            if ((this.GetCustomerProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerProfileCompleted(this, new GetCustomerProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerProfileJSON(int UID) {
            object[] results = this.Invoke("GetCustomerProfileJSON", new object[] {
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerProfileJSONAsync(int UID) {
            this.GetCustomerProfileJSONAsync(UID, null);
        }
        
        /// <remarks/>
        public void GetCustomerProfileJSONAsync(int UID, object userState) {
            if ((this.GetCustomerProfileJSONOperationCompleted == null)) {
                this.GetCustomerProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerProfileJSONOperationCompleted);
            }
            this.InvokeAsync("GetCustomerProfileJSON", new object[] {
                        UID}, this.GetCustomerProfileJSONOperationCompleted, userState);
        }
        
        private void OnGetCustomerProfileJSONOperationCompleted(object arg) {
            if ((this.GetCustomerProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerProfileJSONCompleted(this, new GetCustomerProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomerPayProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrorResponse", Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
        public ANetApiResponse DeleteCustomerPayProfile(string PID, string PPID) {
            object[] results = this.Invoke("DeleteCustomerPayProfile", new object[] {
                        PID,
                        PPID});
            return ((ANetApiResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerPayProfileAsync(string PID, string PPID) {
            this.DeleteCustomerPayProfileAsync(PID, PPID, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerPayProfileAsync(string PID, string PPID, object userState) {
            if ((this.DeleteCustomerPayProfileOperationCompleted == null)) {
                this.DeleteCustomerPayProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerPayProfileOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomerPayProfile", new object[] {
                        PID,
                        PPID}, this.DeleteCustomerPayProfileOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerPayProfileOperationCompleted(object arg) {
            if ((this.DeleteCustomerPayProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerPayProfileCompleted(this, new DeleteCustomerPayProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomerPayProfileJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCustomerPayProfileJSON(string PID, string PPID) {
            object[] results = this.Invoke("DeleteCustomerPayProfileJSON", new object[] {
                        PID,
                        PPID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerPayProfileJSONAsync(string PID, string PPID) {
            this.DeleteCustomerPayProfileJSONAsync(PID, PPID, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerPayProfileJSONAsync(string PID, string PPID, object userState) {
            if ((this.DeleteCustomerPayProfileJSONOperationCompleted == null)) {
                this.DeleteCustomerPayProfileJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerPayProfileJSONOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomerPayProfileJSON", new object[] {
                        PID,
                        PPID}, this.DeleteCustomerPayProfileJSONOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerPayProfileJSONOperationCompleted(object arg) {
            if ((this.DeleteCustomerPayProfileJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerPayProfileJSONCompleted(this, new DeleteCustomerPayProfileJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppointmentPhotos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AppointmentPhotoInfo[] GetAppointmentPhotos(int AID) {
            object[] results = this.Invoke("GetAppointmentPhotos", new object[] {
                        AID});
            return ((AppointmentPhotoInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAppointmentPhotosAsync(int AID) {
            this.GetAppointmentPhotosAsync(AID, null);
        }
        
        /// <remarks/>
        public void GetAppointmentPhotosAsync(int AID, object userState) {
            if ((this.GetAppointmentPhotosOperationCompleted == null)) {
                this.GetAppointmentPhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppointmentPhotosOperationCompleted);
            }
            this.InvokeAsync("GetAppointmentPhotos", new object[] {
                        AID}, this.GetAppointmentPhotosOperationCompleted, userState);
        }
        
        private void OnGetAppointmentPhotosOperationCompleted(object arg) {
            if ((this.GetAppointmentPhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppointmentPhotosCompleted(this, new GetAppointmentPhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAppointmentPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAppointmentPhoto(int AID, int UID, string FilePath) {
            this.Invoke("AddAppointmentPhoto", new object[] {
                        AID,
                        UID,
                        FilePath});
        }
        
        /// <remarks/>
        public void AddAppointmentPhotoAsync(int AID, int UID, string FilePath) {
            this.AddAppointmentPhotoAsync(AID, UID, FilePath, null);
        }
        
        /// <remarks/>
        public void AddAppointmentPhotoAsync(int AID, int UID, string FilePath, object userState) {
            if ((this.AddAppointmentPhotoOperationCompleted == null)) {
                this.AddAppointmentPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAppointmentPhotoOperationCompleted);
            }
            this.InvokeAsync("AddAppointmentPhoto", new object[] {
                        AID,
                        UID,
                        FilePath}, this.AddAppointmentPhotoOperationCompleted, userState);
        }
        
        private void OnAddAppointmentPhotoOperationCompleted(object arg) {
            if ((this.AddAppointmentPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAppointmentPhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveAppointmentPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAppointmentPhoto(int ID) {
            this.Invoke("RemoveAppointmentPhoto", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void RemoveAppointmentPhotoAsync(int ID) {
            this.RemoveAppointmentPhotoAsync(ID, null);
        }
        
        /// <remarks/>
        public void RemoveAppointmentPhotoAsync(int ID, object userState) {
            if ((this.RemoveAppointmentPhotoOperationCompleted == null)) {
                this.RemoveAppointmentPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAppointmentPhotoOperationCompleted);
            }
            this.InvokeAsync("RemoveAppointmentPhoto", new object[] {
                        ID}, this.RemoveAppointmentPhotoOperationCompleted, userState);
        }
        
        private void OnRemoveAppointmentPhotoOperationCompleted(object arg) {
            if ((this.RemoveAppointmentPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAppointmentPhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNotification(int ByID, int ToID, int NotTypeID, int RelatedEntityID) {
            this.Invoke("AddNotification", new object[] {
                        ByID,
                        ToID,
                        NotTypeID,
                        RelatedEntityID});
        }
        
        /// <remarks/>
        public void AddNotificationAsync(int ByID, int ToID, int NotTypeID, int RelatedEntityID) {
            this.AddNotificationAsync(ByID, ToID, NotTypeID, RelatedEntityID, null);
        }
        
        /// <remarks/>
        public void AddNotificationAsync(int ByID, int ToID, int NotTypeID, int RelatedEntityID, object userState) {
            if ((this.AddNotificationOperationCompleted == null)) {
                this.AddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNotificationOperationCompleted);
            }
            this.InvokeAsync("AddNotification", new object[] {
                        ByID,
                        ToID,
                        NotTypeID,
                        RelatedEntityID}, this.AddNotificationOperationCompleted, userState);
        }
        
        private void OnAddNotificationOperationCompleted(object arg) {
            if ((this.AddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveNotification(int ID) {
            this.Invoke("RemoveNotification", new object[] {
                        ID});
        }
        
        /// <remarks/>
        public void RemoveNotificationAsync(int ID) {
            this.RemoveNotificationAsync(ID, null);
        }
        
        /// <remarks/>
        public void RemoveNotificationAsync(int ID, object userState) {
            if ((this.RemoveNotificationOperationCompleted == null)) {
                this.RemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("RemoveNotification", new object[] {
                        ID}, this.RemoveNotificationOperationCompleted, userState);
        }
        
        private void OnRemoveNotificationOperationCompleted(object arg) {
            if ((this.RemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUserNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveUserNotification(int UID) {
            this.Invoke("RemoveUserNotification", new object[] {
                        UID});
        }
        
        /// <remarks/>
        public void RemoveUserNotificationAsync(int UID) {
            this.RemoveUserNotificationAsync(UID, null);
        }
        
        /// <remarks/>
        public void RemoveUserNotificationAsync(int UID, object userState) {
            if ((this.RemoveUserNotificationOperationCompleted == null)) {
                this.RemoveUserNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserNotificationOperationCompleted);
            }
            this.InvokeAsync("RemoveUserNotification", new object[] {
                        UID}, this.RemoveUserNotificationOperationCompleted, userState);
        }
        
        private void OnRemoveUserNotificationOperationCompleted(object arg) {
            if ((this.RemoveUserNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NotificationInfo[] GetMyNotification(int MyID) {
            object[] results = this.Invoke("GetMyNotification", new object[] {
                        MyID});
            return ((NotificationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMyNotificationAsync(int MyID) {
            this.GetMyNotificationAsync(MyID, null);
        }
        
        /// <remarks/>
        public void GetMyNotificationAsync(int MyID, object userState) {
            if ((this.GetMyNotificationOperationCompleted == null)) {
                this.GetMyNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyNotificationOperationCompleted);
            }
            this.InvokeAsync("GetMyNotification", new object[] {
                        MyID}, this.GetMyNotificationOperationCompleted, userState);
        }
        
        private void OnGetMyNotificationOperationCompleted(object arg) {
            if ((this.GetMyNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyNotificationCompleted(this, new GetMyNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserNotification() {
            object[] results = this.Invoke("GetUserNotification", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNotificationAsync() {
            this.GetUserNotificationAsync(null);
        }
        
        /// <remarks/>
        public void GetUserNotificationAsync(object userState) {
            if ((this.GetUserNotificationOperationCompleted == null)) {
                this.GetUserNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNotificationOperationCompleted);
            }
            this.InvokeAsync("GetUserNotification", new object[0], this.GetUserNotificationOperationCompleted, userState);
        }
        
        private void OnGetUserNotificationOperationCompleted(object arg) {
            if ((this.GetUserNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNotificationCompleted(this, new GetUserNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClientLocation {
        
        private int addressIDField;
        
        private string addressField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private int appointmentIDField;
        
        /// <remarks/>
        public int AddressID {
            get {
                return this.addressIDField;
            }
            set {
                this.addressIDField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public int AppointmentID {
            get {
                return this.appointmentIDField;
            }
            set {
                this.appointmentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationInfo {
        
        private int idField;
        
        private int activityByIDField;
        
        private int activityToIDField;
        
        private System.DateTime datedField;
        
        private int privacyTypeField;
        
        private int notificationTypeIDField;
        
        private int relatedEntityIDField;
        
        private string byNameField;
        
        private string toNameField;
        
        private string displayTextField;
        
        private string typeNameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ActivityByID {
            get {
                return this.activityByIDField;
            }
            set {
                this.activityByIDField = value;
            }
        }
        
        /// <remarks/>
        public int ActivityToID {
            get {
                return this.activityToIDField;
            }
            set {
                this.activityToIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Dated {
            get {
                return this.datedField;
            }
            set {
                this.datedField = value;
            }
        }
        
        /// <remarks/>
        public int PrivacyType {
            get {
                return this.privacyTypeField;
            }
            set {
                this.privacyTypeField = value;
            }
        }
        
        /// <remarks/>
        public int NotificationTypeID {
            get {
                return this.notificationTypeIDField;
            }
            set {
                this.notificationTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int RelatedEntityID {
            get {
                return this.relatedEntityIDField;
            }
            set {
                this.relatedEntityIDField = value;
            }
        }
        
        /// <remarks/>
        public string ByName {
            get {
                return this.byNameField;
            }
            set {
                this.byNameField = value;
            }
        }
        
        /// <remarks/>
        public string ToName {
            get {
                return this.toNameField;
            }
            set {
                this.toNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayText {
            get {
                return this.displayTextField;
            }
            set {
                this.displayTextField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AppointmentPhotoInfo {
        
        private int idField;
        
        private int userIDField;
        
        private int appointmentIDField;
        
        private string filePathField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int AppointmentID {
            get {
                return this.appointmentIDField;
            }
            set {
                this.appointmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public partial class messagesType {
        
        private messageTypeEnum resultCodeField;
        
        private messagesTypeMessage[] messageField;
        
        /// <remarks/>
        public messageTypeEnum resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("message")]
        public messagesTypeMessage[] message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public enum messageTypeEnum {
        
        /// <remarks/>
        Ok,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public partial class messagesTypeMessage {
        
        private string codeField;
        
        private string textField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public partial class ANetApiResponse {
        
        private string refIdField;
        
        private messagesType messagesField;
        
        private string sessionTokenField;
        
        /// <remarks/>
        public string refId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        public messagesType messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        public string sessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RatingInfo {
        
        private string ratingNameField;
        
        private int ratingTypeIDField;
        
        private int ratingFilterField;
        
        /// <remarks/>
        public string RatingName {
            get {
                return this.ratingNameField;
            }
            set {
                this.ratingNameField = value;
            }
        }
        
        /// <remarks/>
        public int RatingTypeID {
            get {
                return this.ratingTypeIDField;
            }
            set {
                this.ratingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int RatingFilter {
            get {
                return this.ratingFilterField;
            }
            set {
                this.ratingFilterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceInfo {
        
        private int serviceIDField;
        
        private string serviceNameField;
        
        private string shortDescriptionField;
        
        private string imageField;
        
        private int parentIDField;
        
        private int qtyField;
        
        private decimal priceField;
        
        private int durationField;
        
        private int serviceTypeIDField;
        
        private ServiceInfo[] childrenField;
        
        /// <remarks/>
        public int ServiceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShortDescription {
            get {
                return this.shortDescriptionField;
            }
            set {
                this.shortDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int ParentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public int Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public int ServiceTypeID {
            get {
                return this.serviceTypeIDField;
            }
            set {
                this.serviceTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public ServiceInfo[] Children {
            get {
                return this.childrenField;
            }
            set {
                this.childrenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AppointmentInfo {
        
        private int appointmentIDField;
        
        private string payProfileIDField;
        
        private string customerProfileIDField;
        
        private string payTxnIDField;
        
        private string authTxnIDField;
        
        private int clientIDField;
        
        private int providerIDField;
        
        private string forDateField;
        
        private System.DateTime orderDateField;
        
        private string atTimeField;
        
        private string endTimeField;
        
        private string commentsField;
        
        private int statusField;
        
        private int seenStatusField;
        
        private int addressIDField;
        
        private int hasNotifiedField;
        
        private ServiceInfo[] servicesField;
        
        private decimal amountField;
        
        private string cCNumberField;
        
        private string expiryField;
        
        /// <remarks/>
        public int AppointmentID {
            get {
                return this.appointmentIDField;
            }
            set {
                this.appointmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayProfileID {
            get {
                return this.payProfileIDField;
            }
            set {
                this.payProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerProfileID {
            get {
                return this.customerProfileIDField;
            }
            set {
                this.customerProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string PayTxnID {
            get {
                return this.payTxnIDField;
            }
            set {
                this.payTxnIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuthTxnID {
            get {
                return this.authTxnIDField;
            }
            set {
                this.authTxnIDField = value;
            }
        }
        
        /// <remarks/>
        public int ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ForDate {
            get {
                return this.forDateField;
            }
            set {
                this.forDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public string AtTime {
            get {
                return this.atTimeField;
            }
            set {
                this.atTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int SeenStatus {
            get {
                return this.seenStatusField;
            }
            set {
                this.seenStatusField = value;
            }
        }
        
        /// <remarks/>
        public int AddressID {
            get {
                return this.addressIDField;
            }
            set {
                this.addressIDField = value;
            }
        }
        
        /// <remarks/>
        public int HasNotified {
            get {
                return this.hasNotifiedField;
            }
            set {
                this.hasNotifiedField = value;
            }
        }
        
        /// <remarks/>
        public ServiceInfo[] Services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string CCNumber {
            get {
                return this.cCNumberField;
            }
            set {
                this.cCNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Expiry {
            get {
                return this.expiryField;
            }
            set {
                this.expiryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public partial class CreateCustomerProfileResult : ANetApiResponse {
        
        private string customerProfileIdField;
        
        private string[] customerPaymentProfileIdListField;
        
        private string[] customerShippingAddressIdListField;
        
        private string[] validationDirectResponseListField;
        
        /// <remarks/>
        public string customerProfileId {
            get {
                return this.customerProfileIdField;
            }
            set {
                this.customerProfileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("numericString", IsNullable=false)]
        public string[] customerPaymentProfileIdList {
            get {
                return this.customerPaymentProfileIdListField;
            }
            set {
                this.customerPaymentProfileIdListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("numericString", IsNullable=false)]
        public string[] customerShippingAddressIdList {
            get {
                return this.customerShippingAddressIdListField;
            }
            set {
                this.customerShippingAddressIdListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] validationDirectResponseList {
            get {
                return this.validationDirectResponseListField;
            }
            set {
                this.validationDirectResponseListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1087.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="AnetApi/xml/v1/schema/AnetApiSchema.xsd")]
    public partial class CreateCustomerPaymentProfileResult : ANetApiResponse {
        
        private string customerProfileIdField;
        
        private string customerPaymentProfileIdField;
        
        private string validationDirectResponseField;
        
        /// <remarks/>
        public string customerProfileId {
            get {
                return this.customerProfileIdField;
            }
            set {
                this.customerProfileIdField = value;
            }
        }
        
        /// <remarks/>
        public string customerPaymentProfileId {
            get {
                return this.customerPaymentProfileIdField;
            }
            set {
                this.customerPaymentProfileIdField = value;
            }
        }
        
        /// <remarks/>
        public string validationDirectResponse {
            get {
                return this.validationDirectResponseField;
            }
            set {
                this.validationDirectResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddAppointmentCompletedEventHandler(object sender, AddAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddAddressCompletedEventHandler(object sender, AddAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetAppLocationCompletedEventHandler(object sender, GetAppLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateAppStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateAppSeenStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void MakeAppointmentCompletedEventHandler(object sender, MakeAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateAppBasicInfoCompletedEventHandler(object sender, UpdateAppBasicInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAppBasicInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAppBasicInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetAppointmentCompletedEventHandler(object sender, GetAppointmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppointmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppointmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ListAppointmentByProviderCompletedEventHandler(object sender, ListAppointmentByProviderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAppointmentByProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAppointmentByProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ListAppointmentByClientCompletedEventHandler(object sender, ListAppointmentByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAppointmentByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAppointmentByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void UpdateAppointmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RemoveAppCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void HideApp4MeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void IsProviderSlotFreeCompletedEventHandler(object sender, IsProviderSlotFreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProviderSlotFreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProviderSlotFreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void IsProviderSlotFreeEMCompletedEventHandler(object sender, IsProviderSlotFreeEMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProviderSlotFreeEMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProviderSlotFreeEMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetProOccupiedSlotsCompletedEventHandler(object sender, GetProOccupiedSlotsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProOccupiedSlotsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProOccupiedSlotsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CanSetAvailabilityCompletedEventHandler(object sender, CanSetAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanSetAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanSetAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddRatingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DidIRatedCompletedEventHandler(object sender, DidIRatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DidIRatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DidIRatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ListRatingCompletedEventHandler(object sender, ListRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RatingInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RatingInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ChargeCardCompletedEventHandler(object sender, ChargeCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AuthCardCompletedEventHandler(object sender, AuthCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AuthCardJSONCompletedEventHandler(object sender, AuthCardJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthCardJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthCardJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ChargeProfileCompletedEventHandler(object sender, ChargeProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ChargeProfileJSONCompletedEventHandler(object sender, ChargeProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AuthProfileCompletedEventHandler(object sender, AuthProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AuthProfileJSONCompletedEventHandler(object sender, AuthProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ChargePreviousAuthCompletedEventHandler(object sender, ChargePreviousAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargePreviousAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargePreviousAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void ChargePreviousAuthJSONCompletedEventHandler(object sender, ChargePreviousAuthJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargePreviousAuthJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargePreviousAuthJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RefundCardCompletedEventHandler(object sender, RefundCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RefundCardJSONCompletedEventHandler(object sender, RefundCardJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundCardJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundCardJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CreateCustomerProfileCompletedEventHandler(object sender, CreateCustomerProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateCustomerProfileResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateCustomerProfileResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CreateCustomerProfileJSONCompletedEventHandler(object sender, CreateCustomerProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CreateCustomerPaymentProfileCompletedEventHandler(object sender, CreateCustomerPaymentProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerPaymentProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerPaymentProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateCustomerPaymentProfileResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateCustomerPaymentProfileResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void CreateCustomerPaymentProfileJSONCompletedEventHandler(object sender, CreateCustomerPaymentProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerPaymentProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerPaymentProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetCustomerProfileCompletedEventHandler(object sender, GetCustomerProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetCustomerProfileJSONCompletedEventHandler(object sender, GetCustomerProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DeleteCustomerPayProfileCompletedEventHandler(object sender, DeleteCustomerPayProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerPayProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerPayProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ANetApiResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ANetApiResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void DeleteCustomerPayProfileJSONCompletedEventHandler(object sender, DeleteCustomerPayProfileJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerPayProfileJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerPayProfileJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetAppointmentPhotosCompletedEventHandler(object sender, GetAppointmentPhotosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppointmentPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppointmentPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AppointmentPhotoInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AppointmentPhotoInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddAppointmentPhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RemoveAppointmentPhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void AddNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RemoveNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void RemoveUserNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetMyNotificationCompletedEventHandler(object sender, GetMyNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void GetUserNotificationCompletedEventHandler(object sender, GetUserNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591